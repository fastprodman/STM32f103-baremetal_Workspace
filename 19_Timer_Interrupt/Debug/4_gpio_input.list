
4_gpio_input.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000194  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002c4  080002cc  000102cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002c4  080002c4  000102cc  2**0
                  CONTENTS
  4 .ARM          00000000  080002c4  080002c4  000102cc  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002c4  080002cc  000102cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002c4  080002c4  000102c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080002c8  080002c8  000102c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000102cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080002cc  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080002cc  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000102cc  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000215  00000000  00000000  000102f5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000000d6  00000000  00000000  0001050a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000048  00000000  00000000  000105e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000030  00000000  00000000  00010628  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000fcb2  00000000  00000000  00010658  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000005a0  00000000  00000000  0002030a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00052dd3  00000000  00000000  000208aa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0007367d  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000058  00000000  00000000  000736d0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	080002ac 	.word	0x080002ac

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	080002ac 	.word	0x080002ac

08000170 <main>:

#define GPIOCEN	(1U<<4)
#define PIN13	(1U<<13)
#define PIN14	(1U<<14)

int main(void){
 8000170:	b480      	push	{r7}
 8000172:	b083      	sub	sp, #12
 8000174:	af00      	add	r7, sp, #0

	RCC->APB2ENR |= GPIOCEN; // clock enabled
 8000176:	4b23      	ldr	r3, [pc, #140]	; (8000204 <main+0x94>)
 8000178:	699b      	ldr	r3, [r3, #24]
 800017a:	4a22      	ldr	r2, [pc, #136]	; (8000204 <main+0x94>)
 800017c:	f043 0310 	orr.w	r3, r3, #16
 8000180:	6193      	str	r3, [r2, #24]
	//PIN13
	GPIOC->CRH = (GPIOC->CRH &~(1U<<23))&~(1U<<22); // 00 General purpose output push-pull
 8000182:	4b21      	ldr	r3, [pc, #132]	; (8000208 <main+0x98>)
 8000184:	685b      	ldr	r3, [r3, #4]
 8000186:	4a20      	ldr	r2, [pc, #128]	; (8000208 <main+0x98>)
 8000188:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 800018c:	6053      	str	r3, [r2, #4]
	GPIOC->CRH = (GPIOC->CRH |(1U<<21))&~(1U<<20); // 10 Output mode, max speed 2 MHz.
 800018e:	4b1e      	ldr	r3, [pc, #120]	; (8000208 <main+0x98>)
 8000190:	685b      	ldr	r3, [r3, #4]
 8000192:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8000196:	4a1c      	ldr	r2, [pc, #112]	; (8000208 <main+0x98>)
 8000198:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800019c:	6053      	str	r3, [r2, #4]
	//PIN14
	GPIOC->CRH = (GPIOC->CRH |(1U<<27))&~(1U<<26); // 10 Input with pull-up / pull-down
 800019e:	4b1a      	ldr	r3, [pc, #104]	; (8000208 <main+0x98>)
 80001a0:	685b      	ldr	r3, [r3, #4]
 80001a2:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 80001a6:	4a18      	ldr	r2, [pc, #96]	; (8000208 <main+0x98>)
 80001a8:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 80001ac:	6053      	str	r3, [r2, #4]
	GPIOC->CRH = (GPIOC->CRH &~(1U<<25))&~(1U<<24); // 00 Input mode
 80001ae:	4b16      	ldr	r3, [pc, #88]	; (8000208 <main+0x98>)
 80001b0:	685b      	ldr	r3, [r3, #4]
 80001b2:	4a15      	ldr	r2, [pc, #84]	; (8000208 <main+0x98>)
 80001b4:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 80001b8:	6053      	str	r3, [r2, #4]
	while(1){
		if(GPIOC->IDR & PIN14){
 80001ba:	4b13      	ldr	r3, [pc, #76]	; (8000208 <main+0x98>)
 80001bc:	689b      	ldr	r3, [r3, #8]
 80001be:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80001c2:	2b00      	cmp	r3, #0
 80001c4:	d00e      	beq.n	80001e4 <main+0x74>
			GPIOC->BSRR = PIN13;
 80001c6:	4b10      	ldr	r3, [pc, #64]	; (8000208 <main+0x98>)
 80001c8:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80001cc:	611a      	str	r2, [r3, #16]
			for(int i = 0; i<200000;i++);
 80001ce:	2300      	movs	r3, #0
 80001d0:	607b      	str	r3, [r7, #4]
 80001d2:	e002      	b.n	80001da <main+0x6a>
 80001d4:	687b      	ldr	r3, [r7, #4]
 80001d6:	3301      	adds	r3, #1
 80001d8:	607b      	str	r3, [r7, #4]
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	4a0b      	ldr	r2, [pc, #44]	; (800020c <main+0x9c>)
 80001de:	4293      	cmp	r3, r2
 80001e0:	ddf8      	ble.n	80001d4 <main+0x64>
 80001e2:	e7ea      	b.n	80001ba <main+0x4a>
		}else{
			GPIOC->BSRR = (1U<<29);
 80001e4:	4b08      	ldr	r3, [pc, #32]	; (8000208 <main+0x98>)
 80001e6:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
 80001ea:	611a      	str	r2, [r3, #16]
			for(int i = 0; i<200000;i++);
 80001ec:	2300      	movs	r3, #0
 80001ee:	603b      	str	r3, [r7, #0]
 80001f0:	e002      	b.n	80001f8 <main+0x88>
 80001f2:	683b      	ldr	r3, [r7, #0]
 80001f4:	3301      	adds	r3, #1
 80001f6:	603b      	str	r3, [r7, #0]
 80001f8:	683b      	ldr	r3, [r7, #0]
 80001fa:	4a04      	ldr	r2, [pc, #16]	; (800020c <main+0x9c>)
 80001fc:	4293      	cmp	r3, r2
 80001fe:	ddf8      	ble.n	80001f2 <main+0x82>
		if(GPIOC->IDR & PIN14){
 8000200:	e7db      	b.n	80001ba <main+0x4a>
 8000202:	bf00      	nop
 8000204:	40021000 	.word	0x40021000
 8000208:	40011000 	.word	0x40011000
 800020c:	00030d3f 	.word	0x00030d3f

08000210 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000210:	480d      	ldr	r0, [pc, #52]	; (8000248 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000212:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000214:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000218:	480c      	ldr	r0, [pc, #48]	; (800024c <LoopForever+0x6>)
  ldr r1, =_edata
 800021a:	490d      	ldr	r1, [pc, #52]	; (8000250 <LoopForever+0xa>)
  ldr r2, =_sidata
 800021c:	4a0d      	ldr	r2, [pc, #52]	; (8000254 <LoopForever+0xe>)
  movs r3, #0
 800021e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000220:	e002      	b.n	8000228 <LoopCopyDataInit>

08000222 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000222:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000224:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000226:	3304      	adds	r3, #4

08000228 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000228:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800022a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800022c:	d3f9      	bcc.n	8000222 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800022e:	4a0a      	ldr	r2, [pc, #40]	; (8000258 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000230:	4c0a      	ldr	r4, [pc, #40]	; (800025c <LoopForever+0x16>)
  movs r3, #0
 8000232:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000234:	e001      	b.n	800023a <LoopFillZerobss>

08000236 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000236:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000238:	3204      	adds	r2, #4

0800023a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800023a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800023c:	d3fb      	bcc.n	8000236 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800023e:	f000 f811 	bl	8000264 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000242:	f7ff ff95 	bl	8000170 <main>

08000246 <LoopForever>:

LoopForever:
    b LoopForever
 8000246:	e7fe      	b.n	8000246 <LoopForever>
  ldr   r0, =_estack
 8000248:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 800024c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000250:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000254:	080002cc 	.word	0x080002cc
  ldr r2, =_sbss
 8000258:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800025c:	2000001c 	.word	0x2000001c

08000260 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000260:	e7fe      	b.n	8000260 <ADC1_2_IRQHandler>
	...

08000264 <__libc_init_array>:
 8000264:	b570      	push	{r4, r5, r6, lr}
 8000266:	2600      	movs	r6, #0
 8000268:	4d0c      	ldr	r5, [pc, #48]	; (800029c <__libc_init_array+0x38>)
 800026a:	4c0d      	ldr	r4, [pc, #52]	; (80002a0 <__libc_init_array+0x3c>)
 800026c:	1b64      	subs	r4, r4, r5
 800026e:	10a4      	asrs	r4, r4, #2
 8000270:	42a6      	cmp	r6, r4
 8000272:	d109      	bne.n	8000288 <__libc_init_array+0x24>
 8000274:	f000 f81a 	bl	80002ac <_init>
 8000278:	2600      	movs	r6, #0
 800027a:	4d0a      	ldr	r5, [pc, #40]	; (80002a4 <__libc_init_array+0x40>)
 800027c:	4c0a      	ldr	r4, [pc, #40]	; (80002a8 <__libc_init_array+0x44>)
 800027e:	1b64      	subs	r4, r4, r5
 8000280:	10a4      	asrs	r4, r4, #2
 8000282:	42a6      	cmp	r6, r4
 8000284:	d105      	bne.n	8000292 <__libc_init_array+0x2e>
 8000286:	bd70      	pop	{r4, r5, r6, pc}
 8000288:	f855 3b04 	ldr.w	r3, [r5], #4
 800028c:	4798      	blx	r3
 800028e:	3601      	adds	r6, #1
 8000290:	e7ee      	b.n	8000270 <__libc_init_array+0xc>
 8000292:	f855 3b04 	ldr.w	r3, [r5], #4
 8000296:	4798      	blx	r3
 8000298:	3601      	adds	r6, #1
 800029a:	e7f2      	b.n	8000282 <__libc_init_array+0x1e>
 800029c:	080002c4 	.word	0x080002c4
 80002a0:	080002c4 	.word	0x080002c4
 80002a4:	080002c4 	.word	0x080002c4
 80002a8:	080002c8 	.word	0x080002c8

080002ac <_init>:
 80002ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002ae:	bf00      	nop
 80002b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002b2:	bc08      	pop	{r3}
 80002b4:	469e      	mov	lr, r3
 80002b6:	4770      	bx	lr

080002b8 <_fini>:
 80002b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002ba:	bf00      	nop
 80002bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002be:	bc08      	pop	{r3}
 80002c0:	469e      	mov	lr, r3
 80002c2:	4770      	bx	lr
