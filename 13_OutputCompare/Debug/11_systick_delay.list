
11_systick_delay.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000012c8  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000a8  080013f8  080013f8  000113f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080014a0  080014a0  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080014a0  080014a0  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080014a0  080014a0  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080014a0  080014a0  000114a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080014a4  080014a4  000114a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080014a8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  0800150c  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  0800150c  00020094  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000da6  00000000  00000000  0002008d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000545  00000000  00000000  00020e33  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000180  00000000  00000000  00021378  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000128  00000000  00000000  000214f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001efb  00000000  00000000  00021620  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001ed9  00000000  00000000  0002351b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0005876a  00000000  00000000  000253f4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0007db5e  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c94  00000000  00000000  0007dbb0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000064 	.word	0x20000064
 800014c:	00000000 	.word	0x00000000
 8000150:	080013e0 	.word	0x080013e0

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000068 	.word	0x20000068
 800016c:	080013e0 	.word	0x080013e0

08000170 <main>:
#include "stm32f1xx.h"
#include "uart.h"
#include "systick.h"


int main(void){
 8000170:	b580      	push	{r7, lr}
 8000172:	af00      	add	r7, sp, #0

	uart2_tx_init();
 8000174:	f000 f8e0 	bl	8000338 <uart2_tx_init>
	while(1){
		printf("Hello world! \n\r");
 8000178:	4803      	ldr	r0, [pc, #12]	; (8000188 <main+0x18>)
 800017a:	f000 f99d 	bl	80004b8 <iprintf>
		systickDelayMs(1000);
 800017e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000182:	f000 f8a3 	bl	80002cc <systickDelayMs>
		printf("Hello world! \n\r");
 8000186:	e7f7      	b.n	8000178 <main+0x8>
 8000188:	080013f8 	.word	0x080013f8

0800018c <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800018c:	b580      	push	{r7, lr}
 800018e:	b086      	sub	sp, #24
 8000190:	af00      	add	r7, sp, #0
 8000192:	60f8      	str	r0, [r7, #12]
 8000194:	60b9      	str	r1, [r7, #8]
 8000196:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000198:	2300      	movs	r3, #0
 800019a:	617b      	str	r3, [r7, #20]
 800019c:	e00a      	b.n	80001b4 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800019e:	f3af 8000 	nop.w
 80001a2:	4601      	mov	r1, r0
 80001a4:	68bb      	ldr	r3, [r7, #8]
 80001a6:	1c5a      	adds	r2, r3, #1
 80001a8:	60ba      	str	r2, [r7, #8]
 80001aa:	b2ca      	uxtb	r2, r1
 80001ac:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001ae:	697b      	ldr	r3, [r7, #20]
 80001b0:	3301      	adds	r3, #1
 80001b2:	617b      	str	r3, [r7, #20]
 80001b4:	697a      	ldr	r2, [r7, #20]
 80001b6:	687b      	ldr	r3, [r7, #4]
 80001b8:	429a      	cmp	r2, r3
 80001ba:	dbf0      	blt.n	800019e <_read+0x12>
	}

return len;
 80001bc:	687b      	ldr	r3, [r7, #4]
}
 80001be:	4618      	mov	r0, r3
 80001c0:	3718      	adds	r7, #24
 80001c2:	46bd      	mov	sp, r7
 80001c4:	bd80      	pop	{r7, pc}

080001c6 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80001c6:	b580      	push	{r7, lr}
 80001c8:	b086      	sub	sp, #24
 80001ca:	af00      	add	r7, sp, #0
 80001cc:	60f8      	str	r0, [r7, #12]
 80001ce:	60b9      	str	r1, [r7, #8]
 80001d0:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001d2:	2300      	movs	r3, #0
 80001d4:	617b      	str	r3, [r7, #20]
 80001d6:	e009      	b.n	80001ec <_write+0x26>
	{
		__io_putchar(*ptr++);
 80001d8:	68bb      	ldr	r3, [r7, #8]
 80001da:	1c5a      	adds	r2, r3, #1
 80001dc:	60ba      	str	r2, [r7, #8]
 80001de:	781b      	ldrb	r3, [r3, #0]
 80001e0:	4618      	mov	r0, r3
 80001e2:	f000 f89d 	bl	8000320 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001e6:	697b      	ldr	r3, [r7, #20]
 80001e8:	3301      	adds	r3, #1
 80001ea:	617b      	str	r3, [r7, #20]
 80001ec:	697a      	ldr	r2, [r7, #20]
 80001ee:	687b      	ldr	r3, [r7, #4]
 80001f0:	429a      	cmp	r2, r3
 80001f2:	dbf1      	blt.n	80001d8 <_write+0x12>
	}
	return len;
 80001f4:	687b      	ldr	r3, [r7, #4]
}
 80001f6:	4618      	mov	r0, r3
 80001f8:	3718      	adds	r7, #24
 80001fa:	46bd      	mov	sp, r7
 80001fc:	bd80      	pop	{r7, pc}

080001fe <_close>:

int _close(int file)
{
 80001fe:	b480      	push	{r7}
 8000200:	b083      	sub	sp, #12
 8000202:	af00      	add	r7, sp, #0
 8000204:	6078      	str	r0, [r7, #4]
	return -1;
 8000206:	f04f 33ff 	mov.w	r3, #4294967295
}
 800020a:	4618      	mov	r0, r3
 800020c:	370c      	adds	r7, #12
 800020e:	46bd      	mov	sp, r7
 8000210:	bc80      	pop	{r7}
 8000212:	4770      	bx	lr

08000214 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000214:	b480      	push	{r7}
 8000216:	b083      	sub	sp, #12
 8000218:	af00      	add	r7, sp, #0
 800021a:	6078      	str	r0, [r7, #4]
 800021c:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 800021e:	683b      	ldr	r3, [r7, #0]
 8000220:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000224:	605a      	str	r2, [r3, #4]
	return 0;
 8000226:	2300      	movs	r3, #0
}
 8000228:	4618      	mov	r0, r3
 800022a:	370c      	adds	r7, #12
 800022c:	46bd      	mov	sp, r7
 800022e:	bc80      	pop	{r7}
 8000230:	4770      	bx	lr

08000232 <_isatty>:

int _isatty(int file)
{
 8000232:	b480      	push	{r7}
 8000234:	b083      	sub	sp, #12
 8000236:	af00      	add	r7, sp, #0
 8000238:	6078      	str	r0, [r7, #4]
	return 1;
 800023a:	2301      	movs	r3, #1
}
 800023c:	4618      	mov	r0, r3
 800023e:	370c      	adds	r7, #12
 8000240:	46bd      	mov	sp, r7
 8000242:	bc80      	pop	{r7}
 8000244:	4770      	bx	lr

08000246 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000246:	b480      	push	{r7}
 8000248:	b085      	sub	sp, #20
 800024a:	af00      	add	r7, sp, #0
 800024c:	60f8      	str	r0, [r7, #12]
 800024e:	60b9      	str	r1, [r7, #8]
 8000250:	607a      	str	r2, [r7, #4]
	return 0;
 8000252:	2300      	movs	r3, #0
}
 8000254:	4618      	mov	r0, r3
 8000256:	3714      	adds	r7, #20
 8000258:	46bd      	mov	sp, r7
 800025a:	bc80      	pop	{r7}
 800025c:	4770      	bx	lr
	...

08000260 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000260:	b580      	push	{r7, lr}
 8000262:	b086      	sub	sp, #24
 8000264:	af00      	add	r7, sp, #0
 8000266:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000268:	4a14      	ldr	r2, [pc, #80]	; (80002bc <_sbrk+0x5c>)
 800026a:	4b15      	ldr	r3, [pc, #84]	; (80002c0 <_sbrk+0x60>)
 800026c:	1ad3      	subs	r3, r2, r3
 800026e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000270:	697b      	ldr	r3, [r7, #20]
 8000272:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000274:	4b13      	ldr	r3, [pc, #76]	; (80002c4 <_sbrk+0x64>)
 8000276:	681b      	ldr	r3, [r3, #0]
 8000278:	2b00      	cmp	r3, #0
 800027a:	d102      	bne.n	8000282 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800027c:	4b11      	ldr	r3, [pc, #68]	; (80002c4 <_sbrk+0x64>)
 800027e:	4a12      	ldr	r2, [pc, #72]	; (80002c8 <_sbrk+0x68>)
 8000280:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000282:	4b10      	ldr	r3, [pc, #64]	; (80002c4 <_sbrk+0x64>)
 8000284:	681a      	ldr	r2, [r3, #0]
 8000286:	687b      	ldr	r3, [r7, #4]
 8000288:	4413      	add	r3, r2
 800028a:	693a      	ldr	r2, [r7, #16]
 800028c:	429a      	cmp	r2, r3
 800028e:	d207      	bcs.n	80002a0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000290:	f000 f8e0 	bl	8000454 <__errno>
 8000294:	4603      	mov	r3, r0
 8000296:	220c      	movs	r2, #12
 8000298:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800029a:	f04f 33ff 	mov.w	r3, #4294967295
 800029e:	e009      	b.n	80002b4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80002a0:	4b08      	ldr	r3, [pc, #32]	; (80002c4 <_sbrk+0x64>)
 80002a2:	681b      	ldr	r3, [r3, #0]
 80002a4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80002a6:	4b07      	ldr	r3, [pc, #28]	; (80002c4 <_sbrk+0x64>)
 80002a8:	681a      	ldr	r2, [r3, #0]
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	4413      	add	r3, r2
 80002ae:	4a05      	ldr	r2, [pc, #20]	; (80002c4 <_sbrk+0x64>)
 80002b0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80002b2:	68fb      	ldr	r3, [r7, #12]
}
 80002b4:	4618      	mov	r0, r3
 80002b6:	3718      	adds	r7, #24
 80002b8:	46bd      	mov	sp, r7
 80002ba:	bd80      	pop	{r7, pc}
 80002bc:	20005000 	.word	0x20005000
 80002c0:	00000400 	.word	0x00000400
 80002c4:	20000080 	.word	0x20000080
 80002c8:	20000098 	.word	0x20000098

080002cc <systickDelayMs>:
#define CTRL_SYSTICKEN 	(1U<<0)
#define CTRL_CLKSOURCE 	(1U<<2)
#define CTRL_COUNTFLAG	(1U<<16)

void systickDelayMs(int delay)
{
 80002cc:	b480      	push	{r7}
 80002ce:	b085      	sub	sp, #20
 80002d0:	af00      	add	r7, sp, #0
 80002d2:	6078      	str	r0, [r7, #4]
	SysTick->LOAD = SYSTICK_LOAD_VAL;
 80002d4:	4b11      	ldr	r3, [pc, #68]	; (800031c <systickDelayMs+0x50>)
 80002d6:	f44f 52fa 	mov.w	r2, #8000	; 0x1f40
 80002da:	605a      	str	r2, [r3, #4]
	SysTick->VAL = 0;
 80002dc:	4b0f      	ldr	r3, [pc, #60]	; (800031c <systickDelayMs+0x50>)
 80002de:	2200      	movs	r2, #0
 80002e0:	609a      	str	r2, [r3, #8]
	SysTick->CTRL = (CTRL_SYSTICKEN | CTRL_CLKSOURCE);
 80002e2:	4b0e      	ldr	r3, [pc, #56]	; (800031c <systickDelayMs+0x50>)
 80002e4:	2205      	movs	r2, #5
 80002e6:	601a      	str	r2, [r3, #0]

	for(int i=0;i<delay;i++){
 80002e8:	2300      	movs	r3, #0
 80002ea:	60fb      	str	r3, [r7, #12]
 80002ec:	e009      	b.n	8000302 <systickDelayMs+0x36>
		while(!(SysTick->CTRL & CTRL_COUNTFLAG));
 80002ee:	bf00      	nop
 80002f0:	4b0a      	ldr	r3, [pc, #40]	; (800031c <systickDelayMs+0x50>)
 80002f2:	681b      	ldr	r3, [r3, #0]
 80002f4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80002f8:	2b00      	cmp	r3, #0
 80002fa:	d0f9      	beq.n	80002f0 <systickDelayMs+0x24>
	for(int i=0;i<delay;i++){
 80002fc:	68fb      	ldr	r3, [r7, #12]
 80002fe:	3301      	adds	r3, #1
 8000300:	60fb      	str	r3, [r7, #12]
 8000302:	68fa      	ldr	r2, [r7, #12]
 8000304:	687b      	ldr	r3, [r7, #4]
 8000306:	429a      	cmp	r2, r3
 8000308:	dbf1      	blt.n	80002ee <systickDelayMs+0x22>
	}
	SysTick->CTRL = 0;
 800030a:	4b04      	ldr	r3, [pc, #16]	; (800031c <systickDelayMs+0x50>)
 800030c:	2200      	movs	r2, #0
 800030e:	601a      	str	r2, [r3, #0]
}
 8000310:	bf00      	nop
 8000312:	3714      	adds	r7, #20
 8000314:	46bd      	mov	sp, r7
 8000316:	bc80      	pop	{r7}
 8000318:	4770      	bx	lr
 800031a:	bf00      	nop
 800031c:	e000e010 	.word	0xe000e010

08000320 <__io_putchar>:

static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t BoudRate);
static uint16_t compute_uart_div(uint32_t PeriphClk, uint32_t BoudRate);
void uart2_write(int ch);

int __io_putchar(int ch){
 8000320:	b580      	push	{r7, lr}
 8000322:	b082      	sub	sp, #8
 8000324:	af00      	add	r7, sp, #0
 8000326:	6078      	str	r0, [r7, #4]
	uart2_write(ch);
 8000328:	6878      	ldr	r0, [r7, #4]
 800032a:	f000 f82f 	bl	800038c <uart2_write>
	return ch;
 800032e:	687b      	ldr	r3, [r7, #4]
}
 8000330:	4618      	mov	r0, r3
 8000332:	3708      	adds	r7, #8
 8000334:	46bd      	mov	sp, r7
 8000336:	bd80      	pop	{r7, pc}

08000338 <uart2_tx_init>:


void uart2_tx_init(void){
 8000338:	b580      	push	{r7, lr}
 800033a:	af00      	add	r7, sp, #0
	//Config uart gpio pin
	//1.Enable clock access to gpio C
	RCC->APB2ENR |= GPIOAEN; // clock enabled
 800033c:	4b0f      	ldr	r3, [pc, #60]	; (800037c <uart2_tx_init+0x44>)
 800033e:	699b      	ldr	r3, [r3, #24]
 8000340:	4a0e      	ldr	r2, [pc, #56]	; (800037c <uart2_tx_init+0x44>)
 8000342:	f043 0304 	orr.w	r3, r3, #4
 8000346:	6193      	str	r3, [r2, #24]

	//2.Set PA2 mode to alternate function mode
	GPIOA->CRL = (GPIOA->CRL |(1U<<9)|(1U<<8)|(1U<<11))&~(1U<<10); //output 50 mhz max
 8000348:	4b0d      	ldr	r3, [pc, #52]	; (8000380 <uart2_tx_init+0x48>)
 800034a:	681b      	ldr	r3, [r3, #0]
 800034c:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8000350:	4a0b      	ldr	r2, [pc, #44]	; (8000380 <uart2_tx_init+0x48>)
 8000352:	f443 6330 	orr.w	r3, r3, #2816	; 0xb00
 8000356:	6013      	str	r3, [r2, #0]
	//by default


	//Config uart module
	//enable clock access to uart2
	RCC->APB1ENR |= USART2EN;
 8000358:	4b08      	ldr	r3, [pc, #32]	; (800037c <uart2_tx_init+0x44>)
 800035a:	69db      	ldr	r3, [r3, #28]
 800035c:	4a07      	ldr	r2, [pc, #28]	; (800037c <uart2_tx_init+0x44>)
 800035e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000362:	61d3      	str	r3, [r2, #28]
	//Configure uart boudrate
	uart_set_baudrate(USART2, APB1_CLK, UART_BAUDRATE);
 8000364:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8000368:	4906      	ldr	r1, [pc, #24]	; (8000384 <uart2_tx_init+0x4c>)
 800036a:	4807      	ldr	r0, [pc, #28]	; (8000388 <uart2_tx_init+0x50>)
 800036c:	f000 f824 	bl	80003b8 <uart_set_baudrate>
	//configure transfer direction
	USART2->CR1 = CR1_UE | CR1_TE; // Transmitter enable, Enable USART
 8000370:	4b05      	ldr	r3, [pc, #20]	; (8000388 <uart2_tx_init+0x50>)
 8000372:	f242 0208 	movw	r2, #8200	; 0x2008
 8000376:	60da      	str	r2, [r3, #12]
}
 8000378:	bf00      	nop
 800037a:	bd80      	pop	{r7, pc}
 800037c:	40021000 	.word	0x40021000
 8000380:	40010800 	.word	0x40010800
 8000384:	007a1200 	.word	0x007a1200
 8000388:	40004400 	.word	0x40004400

0800038c <uart2_write>:
	uart_set_baudrate(USART2, APB1_CLK, UART_BAUDRATE);
	//configure transfer direction
	USART2->CR1 = CR1_UE | CR1_TE | CR1_RE; // Transmitter enable, Enable USART
}

void uart2_write(int ch){
 800038c:	b480      	push	{r7}
 800038e:	b083      	sub	sp, #12
 8000390:	af00      	add	r7, sp, #0
 8000392:	6078      	str	r0, [r7, #4]
	//Make sure transmit data register is empty
	while(!(USART2->SR & SR_TXE));
 8000394:	bf00      	nop
 8000396:	4b07      	ldr	r3, [pc, #28]	; (80003b4 <uart2_write+0x28>)
 8000398:	681b      	ldr	r3, [r3, #0]
 800039a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800039e:	2b00      	cmp	r3, #0
 80003a0:	d0f9      	beq.n	8000396 <uart2_write+0xa>
	//Write to transmit data register
	USART2->DR = (ch & 0xFF);
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	4a03      	ldr	r2, [pc, #12]	; (80003b4 <uart2_write+0x28>)
 80003a6:	b2db      	uxtb	r3, r3
 80003a8:	6053      	str	r3, [r2, #4]
}
 80003aa:	bf00      	nop
 80003ac:	370c      	adds	r7, #12
 80003ae:	46bd      	mov	sp, r7
 80003b0:	bc80      	pop	{r7}
 80003b2:	4770      	bx	lr
 80003b4:	40004400 	.word	0x40004400

080003b8 <uart_set_baudrate>:
char uart2_read(void){
	while(!(USART2->SR & SR_RXNE));
	return USART2->DR;
}

static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t BoudRate){
 80003b8:	b580      	push	{r7, lr}
 80003ba:	b084      	sub	sp, #16
 80003bc:	af00      	add	r7, sp, #0
 80003be:	60f8      	str	r0, [r7, #12]
 80003c0:	60b9      	str	r1, [r7, #8]
 80003c2:	607a      	str	r2, [r7, #4]
	USARTx->BRR = compute_uart_div(PeriphClk, BoudRate);
 80003c4:	6879      	ldr	r1, [r7, #4]
 80003c6:	68b8      	ldr	r0, [r7, #8]
 80003c8:	f000 f808 	bl	80003dc <compute_uart_div>
 80003cc:	4603      	mov	r3, r0
 80003ce:	461a      	mov	r2, r3
 80003d0:	68fb      	ldr	r3, [r7, #12]
 80003d2:	609a      	str	r2, [r3, #8]
}
 80003d4:	bf00      	nop
 80003d6:	3710      	adds	r7, #16
 80003d8:	46bd      	mov	sp, r7
 80003da:	bd80      	pop	{r7, pc}

080003dc <compute_uart_div>:

static uint16_t compute_uart_div(uint32_t PeriphClk, uint32_t BaudRate){
 80003dc:	b480      	push	{r7}
 80003de:	b083      	sub	sp, #12
 80003e0:	af00      	add	r7, sp, #0
 80003e2:	6078      	str	r0, [r7, #4]
 80003e4:	6039      	str	r1, [r7, #0]
	return ((PeriphClk + (BaudRate/2U))/BaudRate);
 80003e6:	683b      	ldr	r3, [r7, #0]
 80003e8:	085a      	lsrs	r2, r3, #1
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	441a      	add	r2, r3
 80003ee:	683b      	ldr	r3, [r7, #0]
 80003f0:	fbb2 f3f3 	udiv	r3, r2, r3
 80003f4:	b29b      	uxth	r3, r3
}
 80003f6:	4618      	mov	r0, r3
 80003f8:	370c      	adds	r7, #12
 80003fa:	46bd      	mov	sp, r7
 80003fc:	bc80      	pop	{r7}
 80003fe:	4770      	bx	lr

08000400 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000400:	480d      	ldr	r0, [pc, #52]	; (8000438 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000402:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000404:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000408:	480c      	ldr	r0, [pc, #48]	; (800043c <LoopForever+0x6>)
  ldr r1, =_edata
 800040a:	490d      	ldr	r1, [pc, #52]	; (8000440 <LoopForever+0xa>)
  ldr r2, =_sidata
 800040c:	4a0d      	ldr	r2, [pc, #52]	; (8000444 <LoopForever+0xe>)
  movs r3, #0
 800040e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000410:	e002      	b.n	8000418 <LoopCopyDataInit>

08000412 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000412:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000414:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000416:	3304      	adds	r3, #4

08000418 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000418:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800041a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800041c:	d3f9      	bcc.n	8000412 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800041e:	4a0a      	ldr	r2, [pc, #40]	; (8000448 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000420:	4c0a      	ldr	r4, [pc, #40]	; (800044c <LoopForever+0x16>)
  movs r3, #0
 8000422:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000424:	e001      	b.n	800042a <LoopFillZerobss>

08000426 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000426:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000428:	3204      	adds	r2, #4

0800042a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800042a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800042c:	d3fb      	bcc.n	8000426 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800042e:	f000 f817 	bl	8000460 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000432:	f7ff fe9d 	bl	8000170 <main>

08000436 <LoopForever>:

LoopForever:
    b LoopForever
 8000436:	e7fe      	b.n	8000436 <LoopForever>
  ldr   r0, =_estack
 8000438:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 800043c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000440:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000444:	080014a8 	.word	0x080014a8
  ldr r2, =_sbss
 8000448:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 800044c:	20000094 	.word	0x20000094

08000450 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000450:	e7fe      	b.n	8000450 <ADC1_2_IRQHandler>
	...

08000454 <__errno>:
 8000454:	4b01      	ldr	r3, [pc, #4]	; (800045c <__errno+0x8>)
 8000456:	6818      	ldr	r0, [r3, #0]
 8000458:	4770      	bx	lr
 800045a:	bf00      	nop
 800045c:	20000000 	.word	0x20000000

08000460 <__libc_init_array>:
 8000460:	b570      	push	{r4, r5, r6, lr}
 8000462:	2600      	movs	r6, #0
 8000464:	4d0c      	ldr	r5, [pc, #48]	; (8000498 <__libc_init_array+0x38>)
 8000466:	4c0d      	ldr	r4, [pc, #52]	; (800049c <__libc_init_array+0x3c>)
 8000468:	1b64      	subs	r4, r4, r5
 800046a:	10a4      	asrs	r4, r4, #2
 800046c:	42a6      	cmp	r6, r4
 800046e:	d109      	bne.n	8000484 <__libc_init_array+0x24>
 8000470:	f000 ffb6 	bl	80013e0 <_init>
 8000474:	2600      	movs	r6, #0
 8000476:	4d0a      	ldr	r5, [pc, #40]	; (80004a0 <__libc_init_array+0x40>)
 8000478:	4c0a      	ldr	r4, [pc, #40]	; (80004a4 <__libc_init_array+0x44>)
 800047a:	1b64      	subs	r4, r4, r5
 800047c:	10a4      	asrs	r4, r4, #2
 800047e:	42a6      	cmp	r6, r4
 8000480:	d105      	bne.n	800048e <__libc_init_array+0x2e>
 8000482:	bd70      	pop	{r4, r5, r6, pc}
 8000484:	f855 3b04 	ldr.w	r3, [r5], #4
 8000488:	4798      	blx	r3
 800048a:	3601      	adds	r6, #1
 800048c:	e7ee      	b.n	800046c <__libc_init_array+0xc>
 800048e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000492:	4798      	blx	r3
 8000494:	3601      	adds	r6, #1
 8000496:	e7f2      	b.n	800047e <__libc_init_array+0x1e>
 8000498:	080014a0 	.word	0x080014a0
 800049c:	080014a0 	.word	0x080014a0
 80004a0:	080014a0 	.word	0x080014a0
 80004a4:	080014a4 	.word	0x080014a4

080004a8 <memset>:
 80004a8:	4603      	mov	r3, r0
 80004aa:	4402      	add	r2, r0
 80004ac:	4293      	cmp	r3, r2
 80004ae:	d100      	bne.n	80004b2 <memset+0xa>
 80004b0:	4770      	bx	lr
 80004b2:	f803 1b01 	strb.w	r1, [r3], #1
 80004b6:	e7f9      	b.n	80004ac <memset+0x4>

080004b8 <iprintf>:
 80004b8:	b40f      	push	{r0, r1, r2, r3}
 80004ba:	4b0a      	ldr	r3, [pc, #40]	; (80004e4 <iprintf+0x2c>)
 80004bc:	b513      	push	{r0, r1, r4, lr}
 80004be:	681c      	ldr	r4, [r3, #0]
 80004c0:	b124      	cbz	r4, 80004cc <iprintf+0x14>
 80004c2:	69a3      	ldr	r3, [r4, #24]
 80004c4:	b913      	cbnz	r3, 80004cc <iprintf+0x14>
 80004c6:	4620      	mov	r0, r4
 80004c8:	f000 f866 	bl	8000598 <__sinit>
 80004cc:	ab05      	add	r3, sp, #20
 80004ce:	4620      	mov	r0, r4
 80004d0:	9a04      	ldr	r2, [sp, #16]
 80004d2:	68a1      	ldr	r1, [r4, #8]
 80004d4:	9301      	str	r3, [sp, #4]
 80004d6:	f000 f9bb 	bl	8000850 <_vfiprintf_r>
 80004da:	b002      	add	sp, #8
 80004dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004e0:	b004      	add	sp, #16
 80004e2:	4770      	bx	lr
 80004e4:	20000000 	.word	0x20000000

080004e8 <std>:
 80004e8:	2300      	movs	r3, #0
 80004ea:	b510      	push	{r4, lr}
 80004ec:	4604      	mov	r4, r0
 80004ee:	e9c0 3300 	strd	r3, r3, [r0]
 80004f2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80004f6:	6083      	str	r3, [r0, #8]
 80004f8:	8181      	strh	r1, [r0, #12]
 80004fa:	6643      	str	r3, [r0, #100]	; 0x64
 80004fc:	81c2      	strh	r2, [r0, #14]
 80004fe:	6183      	str	r3, [r0, #24]
 8000500:	4619      	mov	r1, r3
 8000502:	2208      	movs	r2, #8
 8000504:	305c      	adds	r0, #92	; 0x5c
 8000506:	f7ff ffcf 	bl	80004a8 <memset>
 800050a:	4b05      	ldr	r3, [pc, #20]	; (8000520 <std+0x38>)
 800050c:	6224      	str	r4, [r4, #32]
 800050e:	6263      	str	r3, [r4, #36]	; 0x24
 8000510:	4b04      	ldr	r3, [pc, #16]	; (8000524 <std+0x3c>)
 8000512:	62a3      	str	r3, [r4, #40]	; 0x28
 8000514:	4b04      	ldr	r3, [pc, #16]	; (8000528 <std+0x40>)
 8000516:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000518:	4b04      	ldr	r3, [pc, #16]	; (800052c <std+0x44>)
 800051a:	6323      	str	r3, [r4, #48]	; 0x30
 800051c:	bd10      	pop	{r4, pc}
 800051e:	bf00      	nop
 8000520:	08000dfd 	.word	0x08000dfd
 8000524:	08000e1f 	.word	0x08000e1f
 8000528:	08000e57 	.word	0x08000e57
 800052c:	08000e7b 	.word	0x08000e7b

08000530 <_cleanup_r>:
 8000530:	4901      	ldr	r1, [pc, #4]	; (8000538 <_cleanup_r+0x8>)
 8000532:	f000 b8af 	b.w	8000694 <_fwalk_reent>
 8000536:	bf00      	nop
 8000538:	0800114d 	.word	0x0800114d

0800053c <__sfmoreglue>:
 800053c:	2268      	movs	r2, #104	; 0x68
 800053e:	b570      	push	{r4, r5, r6, lr}
 8000540:	1e4d      	subs	r5, r1, #1
 8000542:	4355      	muls	r5, r2
 8000544:	460e      	mov	r6, r1
 8000546:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800054a:	f000 f8e5 	bl	8000718 <_malloc_r>
 800054e:	4604      	mov	r4, r0
 8000550:	b140      	cbz	r0, 8000564 <__sfmoreglue+0x28>
 8000552:	2100      	movs	r1, #0
 8000554:	e9c0 1600 	strd	r1, r6, [r0]
 8000558:	300c      	adds	r0, #12
 800055a:	60a0      	str	r0, [r4, #8]
 800055c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000560:	f7ff ffa2 	bl	80004a8 <memset>
 8000564:	4620      	mov	r0, r4
 8000566:	bd70      	pop	{r4, r5, r6, pc}

08000568 <__sfp_lock_acquire>:
 8000568:	4801      	ldr	r0, [pc, #4]	; (8000570 <__sfp_lock_acquire+0x8>)
 800056a:	f000 b8b3 	b.w	80006d4 <__retarget_lock_acquire_recursive>
 800056e:	bf00      	nop
 8000570:	20000085 	.word	0x20000085

08000574 <__sfp_lock_release>:
 8000574:	4801      	ldr	r0, [pc, #4]	; (800057c <__sfp_lock_release+0x8>)
 8000576:	f000 b8ae 	b.w	80006d6 <__retarget_lock_release_recursive>
 800057a:	bf00      	nop
 800057c:	20000085 	.word	0x20000085

08000580 <__sinit_lock_acquire>:
 8000580:	4801      	ldr	r0, [pc, #4]	; (8000588 <__sinit_lock_acquire+0x8>)
 8000582:	f000 b8a7 	b.w	80006d4 <__retarget_lock_acquire_recursive>
 8000586:	bf00      	nop
 8000588:	20000086 	.word	0x20000086

0800058c <__sinit_lock_release>:
 800058c:	4801      	ldr	r0, [pc, #4]	; (8000594 <__sinit_lock_release+0x8>)
 800058e:	f000 b8a2 	b.w	80006d6 <__retarget_lock_release_recursive>
 8000592:	bf00      	nop
 8000594:	20000086 	.word	0x20000086

08000598 <__sinit>:
 8000598:	b510      	push	{r4, lr}
 800059a:	4604      	mov	r4, r0
 800059c:	f7ff fff0 	bl	8000580 <__sinit_lock_acquire>
 80005a0:	69a3      	ldr	r3, [r4, #24]
 80005a2:	b11b      	cbz	r3, 80005ac <__sinit+0x14>
 80005a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005a8:	f7ff bff0 	b.w	800058c <__sinit_lock_release>
 80005ac:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80005b0:	6523      	str	r3, [r4, #80]	; 0x50
 80005b2:	4b13      	ldr	r3, [pc, #76]	; (8000600 <__sinit+0x68>)
 80005b4:	4a13      	ldr	r2, [pc, #76]	; (8000604 <__sinit+0x6c>)
 80005b6:	681b      	ldr	r3, [r3, #0]
 80005b8:	62a2      	str	r2, [r4, #40]	; 0x28
 80005ba:	42a3      	cmp	r3, r4
 80005bc:	bf08      	it	eq
 80005be:	2301      	moveq	r3, #1
 80005c0:	4620      	mov	r0, r4
 80005c2:	bf08      	it	eq
 80005c4:	61a3      	streq	r3, [r4, #24]
 80005c6:	f000 f81f 	bl	8000608 <__sfp>
 80005ca:	6060      	str	r0, [r4, #4]
 80005cc:	4620      	mov	r0, r4
 80005ce:	f000 f81b 	bl	8000608 <__sfp>
 80005d2:	60a0      	str	r0, [r4, #8]
 80005d4:	4620      	mov	r0, r4
 80005d6:	f000 f817 	bl	8000608 <__sfp>
 80005da:	2200      	movs	r2, #0
 80005dc:	2104      	movs	r1, #4
 80005de:	60e0      	str	r0, [r4, #12]
 80005e0:	6860      	ldr	r0, [r4, #4]
 80005e2:	f7ff ff81 	bl	80004e8 <std>
 80005e6:	2201      	movs	r2, #1
 80005e8:	2109      	movs	r1, #9
 80005ea:	68a0      	ldr	r0, [r4, #8]
 80005ec:	f7ff ff7c 	bl	80004e8 <std>
 80005f0:	2202      	movs	r2, #2
 80005f2:	2112      	movs	r1, #18
 80005f4:	68e0      	ldr	r0, [r4, #12]
 80005f6:	f7ff ff77 	bl	80004e8 <std>
 80005fa:	2301      	movs	r3, #1
 80005fc:	61a3      	str	r3, [r4, #24]
 80005fe:	e7d1      	b.n	80005a4 <__sinit+0xc>
 8000600:	08001408 	.word	0x08001408
 8000604:	08000531 	.word	0x08000531

08000608 <__sfp>:
 8000608:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800060a:	4607      	mov	r7, r0
 800060c:	f7ff ffac 	bl	8000568 <__sfp_lock_acquire>
 8000610:	4b1e      	ldr	r3, [pc, #120]	; (800068c <__sfp+0x84>)
 8000612:	681e      	ldr	r6, [r3, #0]
 8000614:	69b3      	ldr	r3, [r6, #24]
 8000616:	b913      	cbnz	r3, 800061e <__sfp+0x16>
 8000618:	4630      	mov	r0, r6
 800061a:	f7ff ffbd 	bl	8000598 <__sinit>
 800061e:	3648      	adds	r6, #72	; 0x48
 8000620:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000624:	3b01      	subs	r3, #1
 8000626:	d503      	bpl.n	8000630 <__sfp+0x28>
 8000628:	6833      	ldr	r3, [r6, #0]
 800062a:	b30b      	cbz	r3, 8000670 <__sfp+0x68>
 800062c:	6836      	ldr	r6, [r6, #0]
 800062e:	e7f7      	b.n	8000620 <__sfp+0x18>
 8000630:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000634:	b9d5      	cbnz	r5, 800066c <__sfp+0x64>
 8000636:	4b16      	ldr	r3, [pc, #88]	; (8000690 <__sfp+0x88>)
 8000638:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800063c:	60e3      	str	r3, [r4, #12]
 800063e:	6665      	str	r5, [r4, #100]	; 0x64
 8000640:	f000 f847 	bl	80006d2 <__retarget_lock_init_recursive>
 8000644:	f7ff ff96 	bl	8000574 <__sfp_lock_release>
 8000648:	2208      	movs	r2, #8
 800064a:	4629      	mov	r1, r5
 800064c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000650:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000654:	6025      	str	r5, [r4, #0]
 8000656:	61a5      	str	r5, [r4, #24]
 8000658:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800065c:	f7ff ff24 	bl	80004a8 <memset>
 8000660:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000664:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000668:	4620      	mov	r0, r4
 800066a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800066c:	3468      	adds	r4, #104	; 0x68
 800066e:	e7d9      	b.n	8000624 <__sfp+0x1c>
 8000670:	2104      	movs	r1, #4
 8000672:	4638      	mov	r0, r7
 8000674:	f7ff ff62 	bl	800053c <__sfmoreglue>
 8000678:	4604      	mov	r4, r0
 800067a:	6030      	str	r0, [r6, #0]
 800067c:	2800      	cmp	r0, #0
 800067e:	d1d5      	bne.n	800062c <__sfp+0x24>
 8000680:	f7ff ff78 	bl	8000574 <__sfp_lock_release>
 8000684:	230c      	movs	r3, #12
 8000686:	603b      	str	r3, [r7, #0]
 8000688:	e7ee      	b.n	8000668 <__sfp+0x60>
 800068a:	bf00      	nop
 800068c:	08001408 	.word	0x08001408
 8000690:	ffff0001 	.word	0xffff0001

08000694 <_fwalk_reent>:
 8000694:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000698:	4606      	mov	r6, r0
 800069a:	4688      	mov	r8, r1
 800069c:	2700      	movs	r7, #0
 800069e:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80006a2:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80006a6:	f1b9 0901 	subs.w	r9, r9, #1
 80006aa:	d505      	bpl.n	80006b8 <_fwalk_reent+0x24>
 80006ac:	6824      	ldr	r4, [r4, #0]
 80006ae:	2c00      	cmp	r4, #0
 80006b0:	d1f7      	bne.n	80006a2 <_fwalk_reent+0xe>
 80006b2:	4638      	mov	r0, r7
 80006b4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80006b8:	89ab      	ldrh	r3, [r5, #12]
 80006ba:	2b01      	cmp	r3, #1
 80006bc:	d907      	bls.n	80006ce <_fwalk_reent+0x3a>
 80006be:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80006c2:	3301      	adds	r3, #1
 80006c4:	d003      	beq.n	80006ce <_fwalk_reent+0x3a>
 80006c6:	4629      	mov	r1, r5
 80006c8:	4630      	mov	r0, r6
 80006ca:	47c0      	blx	r8
 80006cc:	4307      	orrs	r7, r0
 80006ce:	3568      	adds	r5, #104	; 0x68
 80006d0:	e7e9      	b.n	80006a6 <_fwalk_reent+0x12>

080006d2 <__retarget_lock_init_recursive>:
 80006d2:	4770      	bx	lr

080006d4 <__retarget_lock_acquire_recursive>:
 80006d4:	4770      	bx	lr

080006d6 <__retarget_lock_release_recursive>:
 80006d6:	4770      	bx	lr

080006d8 <sbrk_aligned>:
 80006d8:	b570      	push	{r4, r5, r6, lr}
 80006da:	4e0e      	ldr	r6, [pc, #56]	; (8000714 <sbrk_aligned+0x3c>)
 80006dc:	460c      	mov	r4, r1
 80006de:	6831      	ldr	r1, [r6, #0]
 80006e0:	4605      	mov	r5, r0
 80006e2:	b911      	cbnz	r1, 80006ea <sbrk_aligned+0x12>
 80006e4:	f000 fb7a 	bl	8000ddc <_sbrk_r>
 80006e8:	6030      	str	r0, [r6, #0]
 80006ea:	4621      	mov	r1, r4
 80006ec:	4628      	mov	r0, r5
 80006ee:	f000 fb75 	bl	8000ddc <_sbrk_r>
 80006f2:	1c43      	adds	r3, r0, #1
 80006f4:	d00a      	beq.n	800070c <sbrk_aligned+0x34>
 80006f6:	1cc4      	adds	r4, r0, #3
 80006f8:	f024 0403 	bic.w	r4, r4, #3
 80006fc:	42a0      	cmp	r0, r4
 80006fe:	d007      	beq.n	8000710 <sbrk_aligned+0x38>
 8000700:	1a21      	subs	r1, r4, r0
 8000702:	4628      	mov	r0, r5
 8000704:	f000 fb6a 	bl	8000ddc <_sbrk_r>
 8000708:	3001      	adds	r0, #1
 800070a:	d101      	bne.n	8000710 <sbrk_aligned+0x38>
 800070c:	f04f 34ff 	mov.w	r4, #4294967295
 8000710:	4620      	mov	r0, r4
 8000712:	bd70      	pop	{r4, r5, r6, pc}
 8000714:	2000008c 	.word	0x2000008c

08000718 <_malloc_r>:
 8000718:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800071c:	1ccd      	adds	r5, r1, #3
 800071e:	f025 0503 	bic.w	r5, r5, #3
 8000722:	3508      	adds	r5, #8
 8000724:	2d0c      	cmp	r5, #12
 8000726:	bf38      	it	cc
 8000728:	250c      	movcc	r5, #12
 800072a:	2d00      	cmp	r5, #0
 800072c:	4607      	mov	r7, r0
 800072e:	db01      	blt.n	8000734 <_malloc_r+0x1c>
 8000730:	42a9      	cmp	r1, r5
 8000732:	d905      	bls.n	8000740 <_malloc_r+0x28>
 8000734:	230c      	movs	r3, #12
 8000736:	2600      	movs	r6, #0
 8000738:	603b      	str	r3, [r7, #0]
 800073a:	4630      	mov	r0, r6
 800073c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000740:	4e2e      	ldr	r6, [pc, #184]	; (80007fc <_malloc_r+0xe4>)
 8000742:	f000 fdc5 	bl	80012d0 <__malloc_lock>
 8000746:	6833      	ldr	r3, [r6, #0]
 8000748:	461c      	mov	r4, r3
 800074a:	bb34      	cbnz	r4, 800079a <_malloc_r+0x82>
 800074c:	4629      	mov	r1, r5
 800074e:	4638      	mov	r0, r7
 8000750:	f7ff ffc2 	bl	80006d8 <sbrk_aligned>
 8000754:	1c43      	adds	r3, r0, #1
 8000756:	4604      	mov	r4, r0
 8000758:	d14d      	bne.n	80007f6 <_malloc_r+0xde>
 800075a:	6834      	ldr	r4, [r6, #0]
 800075c:	4626      	mov	r6, r4
 800075e:	2e00      	cmp	r6, #0
 8000760:	d140      	bne.n	80007e4 <_malloc_r+0xcc>
 8000762:	6823      	ldr	r3, [r4, #0]
 8000764:	4631      	mov	r1, r6
 8000766:	4638      	mov	r0, r7
 8000768:	eb04 0803 	add.w	r8, r4, r3
 800076c:	f000 fb36 	bl	8000ddc <_sbrk_r>
 8000770:	4580      	cmp	r8, r0
 8000772:	d13a      	bne.n	80007ea <_malloc_r+0xd2>
 8000774:	6821      	ldr	r1, [r4, #0]
 8000776:	3503      	adds	r5, #3
 8000778:	1a6d      	subs	r5, r5, r1
 800077a:	f025 0503 	bic.w	r5, r5, #3
 800077e:	3508      	adds	r5, #8
 8000780:	2d0c      	cmp	r5, #12
 8000782:	bf38      	it	cc
 8000784:	250c      	movcc	r5, #12
 8000786:	4638      	mov	r0, r7
 8000788:	4629      	mov	r1, r5
 800078a:	f7ff ffa5 	bl	80006d8 <sbrk_aligned>
 800078e:	3001      	adds	r0, #1
 8000790:	d02b      	beq.n	80007ea <_malloc_r+0xd2>
 8000792:	6823      	ldr	r3, [r4, #0]
 8000794:	442b      	add	r3, r5
 8000796:	6023      	str	r3, [r4, #0]
 8000798:	e00e      	b.n	80007b8 <_malloc_r+0xa0>
 800079a:	6822      	ldr	r2, [r4, #0]
 800079c:	1b52      	subs	r2, r2, r5
 800079e:	d41e      	bmi.n	80007de <_malloc_r+0xc6>
 80007a0:	2a0b      	cmp	r2, #11
 80007a2:	d916      	bls.n	80007d2 <_malloc_r+0xba>
 80007a4:	1961      	adds	r1, r4, r5
 80007a6:	42a3      	cmp	r3, r4
 80007a8:	6025      	str	r5, [r4, #0]
 80007aa:	bf18      	it	ne
 80007ac:	6059      	strne	r1, [r3, #4]
 80007ae:	6863      	ldr	r3, [r4, #4]
 80007b0:	bf08      	it	eq
 80007b2:	6031      	streq	r1, [r6, #0]
 80007b4:	5162      	str	r2, [r4, r5]
 80007b6:	604b      	str	r3, [r1, #4]
 80007b8:	4638      	mov	r0, r7
 80007ba:	f104 060b 	add.w	r6, r4, #11
 80007be:	f000 fd8d 	bl	80012dc <__malloc_unlock>
 80007c2:	f026 0607 	bic.w	r6, r6, #7
 80007c6:	1d23      	adds	r3, r4, #4
 80007c8:	1af2      	subs	r2, r6, r3
 80007ca:	d0b6      	beq.n	800073a <_malloc_r+0x22>
 80007cc:	1b9b      	subs	r3, r3, r6
 80007ce:	50a3      	str	r3, [r4, r2]
 80007d0:	e7b3      	b.n	800073a <_malloc_r+0x22>
 80007d2:	6862      	ldr	r2, [r4, #4]
 80007d4:	42a3      	cmp	r3, r4
 80007d6:	bf0c      	ite	eq
 80007d8:	6032      	streq	r2, [r6, #0]
 80007da:	605a      	strne	r2, [r3, #4]
 80007dc:	e7ec      	b.n	80007b8 <_malloc_r+0xa0>
 80007de:	4623      	mov	r3, r4
 80007e0:	6864      	ldr	r4, [r4, #4]
 80007e2:	e7b2      	b.n	800074a <_malloc_r+0x32>
 80007e4:	4634      	mov	r4, r6
 80007e6:	6876      	ldr	r6, [r6, #4]
 80007e8:	e7b9      	b.n	800075e <_malloc_r+0x46>
 80007ea:	230c      	movs	r3, #12
 80007ec:	4638      	mov	r0, r7
 80007ee:	603b      	str	r3, [r7, #0]
 80007f0:	f000 fd74 	bl	80012dc <__malloc_unlock>
 80007f4:	e7a1      	b.n	800073a <_malloc_r+0x22>
 80007f6:	6025      	str	r5, [r4, #0]
 80007f8:	e7de      	b.n	80007b8 <_malloc_r+0xa0>
 80007fa:	bf00      	nop
 80007fc:	20000088 	.word	0x20000088

08000800 <__sfputc_r>:
 8000800:	6893      	ldr	r3, [r2, #8]
 8000802:	b410      	push	{r4}
 8000804:	3b01      	subs	r3, #1
 8000806:	2b00      	cmp	r3, #0
 8000808:	6093      	str	r3, [r2, #8]
 800080a:	da07      	bge.n	800081c <__sfputc_r+0x1c>
 800080c:	6994      	ldr	r4, [r2, #24]
 800080e:	42a3      	cmp	r3, r4
 8000810:	db01      	blt.n	8000816 <__sfputc_r+0x16>
 8000812:	290a      	cmp	r1, #10
 8000814:	d102      	bne.n	800081c <__sfputc_r+0x1c>
 8000816:	bc10      	pop	{r4}
 8000818:	f000 bb34 	b.w	8000e84 <__swbuf_r>
 800081c:	6813      	ldr	r3, [r2, #0]
 800081e:	1c58      	adds	r0, r3, #1
 8000820:	6010      	str	r0, [r2, #0]
 8000822:	7019      	strb	r1, [r3, #0]
 8000824:	4608      	mov	r0, r1
 8000826:	bc10      	pop	{r4}
 8000828:	4770      	bx	lr

0800082a <__sfputs_r>:
 800082a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800082c:	4606      	mov	r6, r0
 800082e:	460f      	mov	r7, r1
 8000830:	4614      	mov	r4, r2
 8000832:	18d5      	adds	r5, r2, r3
 8000834:	42ac      	cmp	r4, r5
 8000836:	d101      	bne.n	800083c <__sfputs_r+0x12>
 8000838:	2000      	movs	r0, #0
 800083a:	e007      	b.n	800084c <__sfputs_r+0x22>
 800083c:	463a      	mov	r2, r7
 800083e:	4630      	mov	r0, r6
 8000840:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000844:	f7ff ffdc 	bl	8000800 <__sfputc_r>
 8000848:	1c43      	adds	r3, r0, #1
 800084a:	d1f3      	bne.n	8000834 <__sfputs_r+0xa>
 800084c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000850 <_vfiprintf_r>:
 8000850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000854:	460d      	mov	r5, r1
 8000856:	4614      	mov	r4, r2
 8000858:	4698      	mov	r8, r3
 800085a:	4606      	mov	r6, r0
 800085c:	b09d      	sub	sp, #116	; 0x74
 800085e:	b118      	cbz	r0, 8000868 <_vfiprintf_r+0x18>
 8000860:	6983      	ldr	r3, [r0, #24]
 8000862:	b90b      	cbnz	r3, 8000868 <_vfiprintf_r+0x18>
 8000864:	f7ff fe98 	bl	8000598 <__sinit>
 8000868:	4b89      	ldr	r3, [pc, #548]	; (8000a90 <_vfiprintf_r+0x240>)
 800086a:	429d      	cmp	r5, r3
 800086c:	d11b      	bne.n	80008a6 <_vfiprintf_r+0x56>
 800086e:	6875      	ldr	r5, [r6, #4]
 8000870:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000872:	07d9      	lsls	r1, r3, #31
 8000874:	d405      	bmi.n	8000882 <_vfiprintf_r+0x32>
 8000876:	89ab      	ldrh	r3, [r5, #12]
 8000878:	059a      	lsls	r2, r3, #22
 800087a:	d402      	bmi.n	8000882 <_vfiprintf_r+0x32>
 800087c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800087e:	f7ff ff29 	bl	80006d4 <__retarget_lock_acquire_recursive>
 8000882:	89ab      	ldrh	r3, [r5, #12]
 8000884:	071b      	lsls	r3, r3, #28
 8000886:	d501      	bpl.n	800088c <_vfiprintf_r+0x3c>
 8000888:	692b      	ldr	r3, [r5, #16]
 800088a:	b9eb      	cbnz	r3, 80008c8 <_vfiprintf_r+0x78>
 800088c:	4629      	mov	r1, r5
 800088e:	4630      	mov	r0, r6
 8000890:	f000 fb5c 	bl	8000f4c <__swsetup_r>
 8000894:	b1c0      	cbz	r0, 80008c8 <_vfiprintf_r+0x78>
 8000896:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000898:	07dc      	lsls	r4, r3, #31
 800089a:	d50e      	bpl.n	80008ba <_vfiprintf_r+0x6a>
 800089c:	f04f 30ff 	mov.w	r0, #4294967295
 80008a0:	b01d      	add	sp, #116	; 0x74
 80008a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80008a6:	4b7b      	ldr	r3, [pc, #492]	; (8000a94 <_vfiprintf_r+0x244>)
 80008a8:	429d      	cmp	r5, r3
 80008aa:	d101      	bne.n	80008b0 <_vfiprintf_r+0x60>
 80008ac:	68b5      	ldr	r5, [r6, #8]
 80008ae:	e7df      	b.n	8000870 <_vfiprintf_r+0x20>
 80008b0:	4b79      	ldr	r3, [pc, #484]	; (8000a98 <_vfiprintf_r+0x248>)
 80008b2:	429d      	cmp	r5, r3
 80008b4:	bf08      	it	eq
 80008b6:	68f5      	ldreq	r5, [r6, #12]
 80008b8:	e7da      	b.n	8000870 <_vfiprintf_r+0x20>
 80008ba:	89ab      	ldrh	r3, [r5, #12]
 80008bc:	0598      	lsls	r0, r3, #22
 80008be:	d4ed      	bmi.n	800089c <_vfiprintf_r+0x4c>
 80008c0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80008c2:	f7ff ff08 	bl	80006d6 <__retarget_lock_release_recursive>
 80008c6:	e7e9      	b.n	800089c <_vfiprintf_r+0x4c>
 80008c8:	2300      	movs	r3, #0
 80008ca:	9309      	str	r3, [sp, #36]	; 0x24
 80008cc:	2320      	movs	r3, #32
 80008ce:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80008d2:	2330      	movs	r3, #48	; 0x30
 80008d4:	f04f 0901 	mov.w	r9, #1
 80008d8:	f8cd 800c 	str.w	r8, [sp, #12]
 80008dc:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8000a9c <_vfiprintf_r+0x24c>
 80008e0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80008e4:	4623      	mov	r3, r4
 80008e6:	469a      	mov	sl, r3
 80008e8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80008ec:	b10a      	cbz	r2, 80008f2 <_vfiprintf_r+0xa2>
 80008ee:	2a25      	cmp	r2, #37	; 0x25
 80008f0:	d1f9      	bne.n	80008e6 <_vfiprintf_r+0x96>
 80008f2:	ebba 0b04 	subs.w	fp, sl, r4
 80008f6:	d00b      	beq.n	8000910 <_vfiprintf_r+0xc0>
 80008f8:	465b      	mov	r3, fp
 80008fa:	4622      	mov	r2, r4
 80008fc:	4629      	mov	r1, r5
 80008fe:	4630      	mov	r0, r6
 8000900:	f7ff ff93 	bl	800082a <__sfputs_r>
 8000904:	3001      	adds	r0, #1
 8000906:	f000 80aa 	beq.w	8000a5e <_vfiprintf_r+0x20e>
 800090a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800090c:	445a      	add	r2, fp
 800090e:	9209      	str	r2, [sp, #36]	; 0x24
 8000910:	f89a 3000 	ldrb.w	r3, [sl]
 8000914:	2b00      	cmp	r3, #0
 8000916:	f000 80a2 	beq.w	8000a5e <_vfiprintf_r+0x20e>
 800091a:	2300      	movs	r3, #0
 800091c:	f04f 32ff 	mov.w	r2, #4294967295
 8000920:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000924:	f10a 0a01 	add.w	sl, sl, #1
 8000928:	9304      	str	r3, [sp, #16]
 800092a:	9307      	str	r3, [sp, #28]
 800092c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000930:	931a      	str	r3, [sp, #104]	; 0x68
 8000932:	4654      	mov	r4, sl
 8000934:	2205      	movs	r2, #5
 8000936:	f814 1b01 	ldrb.w	r1, [r4], #1
 800093a:	4858      	ldr	r0, [pc, #352]	; (8000a9c <_vfiprintf_r+0x24c>)
 800093c:	f000 fcba 	bl	80012b4 <memchr>
 8000940:	9a04      	ldr	r2, [sp, #16]
 8000942:	b9d8      	cbnz	r0, 800097c <_vfiprintf_r+0x12c>
 8000944:	06d1      	lsls	r1, r2, #27
 8000946:	bf44      	itt	mi
 8000948:	2320      	movmi	r3, #32
 800094a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800094e:	0713      	lsls	r3, r2, #28
 8000950:	bf44      	itt	mi
 8000952:	232b      	movmi	r3, #43	; 0x2b
 8000954:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000958:	f89a 3000 	ldrb.w	r3, [sl]
 800095c:	2b2a      	cmp	r3, #42	; 0x2a
 800095e:	d015      	beq.n	800098c <_vfiprintf_r+0x13c>
 8000960:	4654      	mov	r4, sl
 8000962:	2000      	movs	r0, #0
 8000964:	f04f 0c0a 	mov.w	ip, #10
 8000968:	9a07      	ldr	r2, [sp, #28]
 800096a:	4621      	mov	r1, r4
 800096c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000970:	3b30      	subs	r3, #48	; 0x30
 8000972:	2b09      	cmp	r3, #9
 8000974:	d94e      	bls.n	8000a14 <_vfiprintf_r+0x1c4>
 8000976:	b1b0      	cbz	r0, 80009a6 <_vfiprintf_r+0x156>
 8000978:	9207      	str	r2, [sp, #28]
 800097a:	e014      	b.n	80009a6 <_vfiprintf_r+0x156>
 800097c:	eba0 0308 	sub.w	r3, r0, r8
 8000980:	fa09 f303 	lsl.w	r3, r9, r3
 8000984:	4313      	orrs	r3, r2
 8000986:	46a2      	mov	sl, r4
 8000988:	9304      	str	r3, [sp, #16]
 800098a:	e7d2      	b.n	8000932 <_vfiprintf_r+0xe2>
 800098c:	9b03      	ldr	r3, [sp, #12]
 800098e:	1d19      	adds	r1, r3, #4
 8000990:	681b      	ldr	r3, [r3, #0]
 8000992:	9103      	str	r1, [sp, #12]
 8000994:	2b00      	cmp	r3, #0
 8000996:	bfbb      	ittet	lt
 8000998:	425b      	neglt	r3, r3
 800099a:	f042 0202 	orrlt.w	r2, r2, #2
 800099e:	9307      	strge	r3, [sp, #28]
 80009a0:	9307      	strlt	r3, [sp, #28]
 80009a2:	bfb8      	it	lt
 80009a4:	9204      	strlt	r2, [sp, #16]
 80009a6:	7823      	ldrb	r3, [r4, #0]
 80009a8:	2b2e      	cmp	r3, #46	; 0x2e
 80009aa:	d10c      	bne.n	80009c6 <_vfiprintf_r+0x176>
 80009ac:	7863      	ldrb	r3, [r4, #1]
 80009ae:	2b2a      	cmp	r3, #42	; 0x2a
 80009b0:	d135      	bne.n	8000a1e <_vfiprintf_r+0x1ce>
 80009b2:	9b03      	ldr	r3, [sp, #12]
 80009b4:	3402      	adds	r4, #2
 80009b6:	1d1a      	adds	r2, r3, #4
 80009b8:	681b      	ldr	r3, [r3, #0]
 80009ba:	9203      	str	r2, [sp, #12]
 80009bc:	2b00      	cmp	r3, #0
 80009be:	bfb8      	it	lt
 80009c0:	f04f 33ff 	movlt.w	r3, #4294967295
 80009c4:	9305      	str	r3, [sp, #20]
 80009c6:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 8000aa0 <_vfiprintf_r+0x250>
 80009ca:	2203      	movs	r2, #3
 80009cc:	4650      	mov	r0, sl
 80009ce:	7821      	ldrb	r1, [r4, #0]
 80009d0:	f000 fc70 	bl	80012b4 <memchr>
 80009d4:	b140      	cbz	r0, 80009e8 <_vfiprintf_r+0x198>
 80009d6:	2340      	movs	r3, #64	; 0x40
 80009d8:	eba0 000a 	sub.w	r0, r0, sl
 80009dc:	fa03 f000 	lsl.w	r0, r3, r0
 80009e0:	9b04      	ldr	r3, [sp, #16]
 80009e2:	3401      	adds	r4, #1
 80009e4:	4303      	orrs	r3, r0
 80009e6:	9304      	str	r3, [sp, #16]
 80009e8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80009ec:	2206      	movs	r2, #6
 80009ee:	482d      	ldr	r0, [pc, #180]	; (8000aa4 <_vfiprintf_r+0x254>)
 80009f0:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80009f4:	f000 fc5e 	bl	80012b4 <memchr>
 80009f8:	2800      	cmp	r0, #0
 80009fa:	d03f      	beq.n	8000a7c <_vfiprintf_r+0x22c>
 80009fc:	4b2a      	ldr	r3, [pc, #168]	; (8000aa8 <_vfiprintf_r+0x258>)
 80009fe:	bb1b      	cbnz	r3, 8000a48 <_vfiprintf_r+0x1f8>
 8000a00:	9b03      	ldr	r3, [sp, #12]
 8000a02:	3307      	adds	r3, #7
 8000a04:	f023 0307 	bic.w	r3, r3, #7
 8000a08:	3308      	adds	r3, #8
 8000a0a:	9303      	str	r3, [sp, #12]
 8000a0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000a0e:	443b      	add	r3, r7
 8000a10:	9309      	str	r3, [sp, #36]	; 0x24
 8000a12:	e767      	b.n	80008e4 <_vfiprintf_r+0x94>
 8000a14:	460c      	mov	r4, r1
 8000a16:	2001      	movs	r0, #1
 8000a18:	fb0c 3202 	mla	r2, ip, r2, r3
 8000a1c:	e7a5      	b.n	800096a <_vfiprintf_r+0x11a>
 8000a1e:	2300      	movs	r3, #0
 8000a20:	f04f 0c0a 	mov.w	ip, #10
 8000a24:	4619      	mov	r1, r3
 8000a26:	3401      	adds	r4, #1
 8000a28:	9305      	str	r3, [sp, #20]
 8000a2a:	4620      	mov	r0, r4
 8000a2c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000a30:	3a30      	subs	r2, #48	; 0x30
 8000a32:	2a09      	cmp	r2, #9
 8000a34:	d903      	bls.n	8000a3e <_vfiprintf_r+0x1ee>
 8000a36:	2b00      	cmp	r3, #0
 8000a38:	d0c5      	beq.n	80009c6 <_vfiprintf_r+0x176>
 8000a3a:	9105      	str	r1, [sp, #20]
 8000a3c:	e7c3      	b.n	80009c6 <_vfiprintf_r+0x176>
 8000a3e:	4604      	mov	r4, r0
 8000a40:	2301      	movs	r3, #1
 8000a42:	fb0c 2101 	mla	r1, ip, r1, r2
 8000a46:	e7f0      	b.n	8000a2a <_vfiprintf_r+0x1da>
 8000a48:	ab03      	add	r3, sp, #12
 8000a4a:	9300      	str	r3, [sp, #0]
 8000a4c:	462a      	mov	r2, r5
 8000a4e:	4630      	mov	r0, r6
 8000a50:	4b16      	ldr	r3, [pc, #88]	; (8000aac <_vfiprintf_r+0x25c>)
 8000a52:	a904      	add	r1, sp, #16
 8000a54:	f3af 8000 	nop.w
 8000a58:	4607      	mov	r7, r0
 8000a5a:	1c78      	adds	r0, r7, #1
 8000a5c:	d1d6      	bne.n	8000a0c <_vfiprintf_r+0x1bc>
 8000a5e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a60:	07d9      	lsls	r1, r3, #31
 8000a62:	d405      	bmi.n	8000a70 <_vfiprintf_r+0x220>
 8000a64:	89ab      	ldrh	r3, [r5, #12]
 8000a66:	059a      	lsls	r2, r3, #22
 8000a68:	d402      	bmi.n	8000a70 <_vfiprintf_r+0x220>
 8000a6a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a6c:	f7ff fe33 	bl	80006d6 <__retarget_lock_release_recursive>
 8000a70:	89ab      	ldrh	r3, [r5, #12]
 8000a72:	065b      	lsls	r3, r3, #25
 8000a74:	f53f af12 	bmi.w	800089c <_vfiprintf_r+0x4c>
 8000a78:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000a7a:	e711      	b.n	80008a0 <_vfiprintf_r+0x50>
 8000a7c:	ab03      	add	r3, sp, #12
 8000a7e:	9300      	str	r3, [sp, #0]
 8000a80:	462a      	mov	r2, r5
 8000a82:	4630      	mov	r0, r6
 8000a84:	4b09      	ldr	r3, [pc, #36]	; (8000aac <_vfiprintf_r+0x25c>)
 8000a86:	a904      	add	r1, sp, #16
 8000a88:	f000 f882 	bl	8000b90 <_printf_i>
 8000a8c:	e7e4      	b.n	8000a58 <_vfiprintf_r+0x208>
 8000a8e:	bf00      	nop
 8000a90:	0800142c 	.word	0x0800142c
 8000a94:	0800144c 	.word	0x0800144c
 8000a98:	0800140c 	.word	0x0800140c
 8000a9c:	0800146c 	.word	0x0800146c
 8000aa0:	08001472 	.word	0x08001472
 8000aa4:	08001476 	.word	0x08001476
 8000aa8:	00000000 	.word	0x00000000
 8000aac:	0800082b 	.word	0x0800082b

08000ab0 <_printf_common>:
 8000ab0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ab4:	4616      	mov	r6, r2
 8000ab6:	4699      	mov	r9, r3
 8000ab8:	688a      	ldr	r2, [r1, #8]
 8000aba:	690b      	ldr	r3, [r1, #16]
 8000abc:	4607      	mov	r7, r0
 8000abe:	4293      	cmp	r3, r2
 8000ac0:	bfb8      	it	lt
 8000ac2:	4613      	movlt	r3, r2
 8000ac4:	6033      	str	r3, [r6, #0]
 8000ac6:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000aca:	460c      	mov	r4, r1
 8000acc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000ad0:	b10a      	cbz	r2, 8000ad6 <_printf_common+0x26>
 8000ad2:	3301      	adds	r3, #1
 8000ad4:	6033      	str	r3, [r6, #0]
 8000ad6:	6823      	ldr	r3, [r4, #0]
 8000ad8:	0699      	lsls	r1, r3, #26
 8000ada:	bf42      	ittt	mi
 8000adc:	6833      	ldrmi	r3, [r6, #0]
 8000ade:	3302      	addmi	r3, #2
 8000ae0:	6033      	strmi	r3, [r6, #0]
 8000ae2:	6825      	ldr	r5, [r4, #0]
 8000ae4:	f015 0506 	ands.w	r5, r5, #6
 8000ae8:	d106      	bne.n	8000af8 <_printf_common+0x48>
 8000aea:	f104 0a19 	add.w	sl, r4, #25
 8000aee:	68e3      	ldr	r3, [r4, #12]
 8000af0:	6832      	ldr	r2, [r6, #0]
 8000af2:	1a9b      	subs	r3, r3, r2
 8000af4:	42ab      	cmp	r3, r5
 8000af6:	dc28      	bgt.n	8000b4a <_printf_common+0x9a>
 8000af8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000afc:	1e13      	subs	r3, r2, #0
 8000afe:	6822      	ldr	r2, [r4, #0]
 8000b00:	bf18      	it	ne
 8000b02:	2301      	movne	r3, #1
 8000b04:	0692      	lsls	r2, r2, #26
 8000b06:	d42d      	bmi.n	8000b64 <_printf_common+0xb4>
 8000b08:	4649      	mov	r1, r9
 8000b0a:	4638      	mov	r0, r7
 8000b0c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000b10:	47c0      	blx	r8
 8000b12:	3001      	adds	r0, #1
 8000b14:	d020      	beq.n	8000b58 <_printf_common+0xa8>
 8000b16:	6823      	ldr	r3, [r4, #0]
 8000b18:	68e5      	ldr	r5, [r4, #12]
 8000b1a:	f003 0306 	and.w	r3, r3, #6
 8000b1e:	2b04      	cmp	r3, #4
 8000b20:	bf18      	it	ne
 8000b22:	2500      	movne	r5, #0
 8000b24:	6832      	ldr	r2, [r6, #0]
 8000b26:	f04f 0600 	mov.w	r6, #0
 8000b2a:	68a3      	ldr	r3, [r4, #8]
 8000b2c:	bf08      	it	eq
 8000b2e:	1aad      	subeq	r5, r5, r2
 8000b30:	6922      	ldr	r2, [r4, #16]
 8000b32:	bf08      	it	eq
 8000b34:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000b38:	4293      	cmp	r3, r2
 8000b3a:	bfc4      	itt	gt
 8000b3c:	1a9b      	subgt	r3, r3, r2
 8000b3e:	18ed      	addgt	r5, r5, r3
 8000b40:	341a      	adds	r4, #26
 8000b42:	42b5      	cmp	r5, r6
 8000b44:	d11a      	bne.n	8000b7c <_printf_common+0xcc>
 8000b46:	2000      	movs	r0, #0
 8000b48:	e008      	b.n	8000b5c <_printf_common+0xac>
 8000b4a:	2301      	movs	r3, #1
 8000b4c:	4652      	mov	r2, sl
 8000b4e:	4649      	mov	r1, r9
 8000b50:	4638      	mov	r0, r7
 8000b52:	47c0      	blx	r8
 8000b54:	3001      	adds	r0, #1
 8000b56:	d103      	bne.n	8000b60 <_printf_common+0xb0>
 8000b58:	f04f 30ff 	mov.w	r0, #4294967295
 8000b5c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b60:	3501      	adds	r5, #1
 8000b62:	e7c4      	b.n	8000aee <_printf_common+0x3e>
 8000b64:	2030      	movs	r0, #48	; 0x30
 8000b66:	18e1      	adds	r1, r4, r3
 8000b68:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000b6c:	1c5a      	adds	r2, r3, #1
 8000b6e:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000b72:	4422      	add	r2, r4
 8000b74:	3302      	adds	r3, #2
 8000b76:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000b7a:	e7c5      	b.n	8000b08 <_printf_common+0x58>
 8000b7c:	2301      	movs	r3, #1
 8000b7e:	4622      	mov	r2, r4
 8000b80:	4649      	mov	r1, r9
 8000b82:	4638      	mov	r0, r7
 8000b84:	47c0      	blx	r8
 8000b86:	3001      	adds	r0, #1
 8000b88:	d0e6      	beq.n	8000b58 <_printf_common+0xa8>
 8000b8a:	3601      	adds	r6, #1
 8000b8c:	e7d9      	b.n	8000b42 <_printf_common+0x92>
	...

08000b90 <_printf_i>:
 8000b90:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000b94:	7e0f      	ldrb	r7, [r1, #24]
 8000b96:	4691      	mov	r9, r2
 8000b98:	2f78      	cmp	r7, #120	; 0x78
 8000b9a:	4680      	mov	r8, r0
 8000b9c:	460c      	mov	r4, r1
 8000b9e:	469a      	mov	sl, r3
 8000ba0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000ba2:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000ba6:	d807      	bhi.n	8000bb8 <_printf_i+0x28>
 8000ba8:	2f62      	cmp	r7, #98	; 0x62
 8000baa:	d80a      	bhi.n	8000bc2 <_printf_i+0x32>
 8000bac:	2f00      	cmp	r7, #0
 8000bae:	f000 80d9 	beq.w	8000d64 <_printf_i+0x1d4>
 8000bb2:	2f58      	cmp	r7, #88	; 0x58
 8000bb4:	f000 80a4 	beq.w	8000d00 <_printf_i+0x170>
 8000bb8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000bbc:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000bc0:	e03a      	b.n	8000c38 <_printf_i+0xa8>
 8000bc2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000bc6:	2b15      	cmp	r3, #21
 8000bc8:	d8f6      	bhi.n	8000bb8 <_printf_i+0x28>
 8000bca:	a101      	add	r1, pc, #4	; (adr r1, 8000bd0 <_printf_i+0x40>)
 8000bcc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000bd0:	08000c29 	.word	0x08000c29
 8000bd4:	08000c3d 	.word	0x08000c3d
 8000bd8:	08000bb9 	.word	0x08000bb9
 8000bdc:	08000bb9 	.word	0x08000bb9
 8000be0:	08000bb9 	.word	0x08000bb9
 8000be4:	08000bb9 	.word	0x08000bb9
 8000be8:	08000c3d 	.word	0x08000c3d
 8000bec:	08000bb9 	.word	0x08000bb9
 8000bf0:	08000bb9 	.word	0x08000bb9
 8000bf4:	08000bb9 	.word	0x08000bb9
 8000bf8:	08000bb9 	.word	0x08000bb9
 8000bfc:	08000d4b 	.word	0x08000d4b
 8000c00:	08000c6d 	.word	0x08000c6d
 8000c04:	08000d2d 	.word	0x08000d2d
 8000c08:	08000bb9 	.word	0x08000bb9
 8000c0c:	08000bb9 	.word	0x08000bb9
 8000c10:	08000d6d 	.word	0x08000d6d
 8000c14:	08000bb9 	.word	0x08000bb9
 8000c18:	08000c6d 	.word	0x08000c6d
 8000c1c:	08000bb9 	.word	0x08000bb9
 8000c20:	08000bb9 	.word	0x08000bb9
 8000c24:	08000d35 	.word	0x08000d35
 8000c28:	682b      	ldr	r3, [r5, #0]
 8000c2a:	1d1a      	adds	r2, r3, #4
 8000c2c:	681b      	ldr	r3, [r3, #0]
 8000c2e:	602a      	str	r2, [r5, #0]
 8000c30:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000c34:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000c38:	2301      	movs	r3, #1
 8000c3a:	e0a4      	b.n	8000d86 <_printf_i+0x1f6>
 8000c3c:	6820      	ldr	r0, [r4, #0]
 8000c3e:	6829      	ldr	r1, [r5, #0]
 8000c40:	0606      	lsls	r6, r0, #24
 8000c42:	f101 0304 	add.w	r3, r1, #4
 8000c46:	d50a      	bpl.n	8000c5e <_printf_i+0xce>
 8000c48:	680e      	ldr	r6, [r1, #0]
 8000c4a:	602b      	str	r3, [r5, #0]
 8000c4c:	2e00      	cmp	r6, #0
 8000c4e:	da03      	bge.n	8000c58 <_printf_i+0xc8>
 8000c50:	232d      	movs	r3, #45	; 0x2d
 8000c52:	4276      	negs	r6, r6
 8000c54:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000c58:	230a      	movs	r3, #10
 8000c5a:	485e      	ldr	r0, [pc, #376]	; (8000dd4 <_printf_i+0x244>)
 8000c5c:	e019      	b.n	8000c92 <_printf_i+0x102>
 8000c5e:	680e      	ldr	r6, [r1, #0]
 8000c60:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000c64:	602b      	str	r3, [r5, #0]
 8000c66:	bf18      	it	ne
 8000c68:	b236      	sxthne	r6, r6
 8000c6a:	e7ef      	b.n	8000c4c <_printf_i+0xbc>
 8000c6c:	682b      	ldr	r3, [r5, #0]
 8000c6e:	6820      	ldr	r0, [r4, #0]
 8000c70:	1d19      	adds	r1, r3, #4
 8000c72:	6029      	str	r1, [r5, #0]
 8000c74:	0601      	lsls	r1, r0, #24
 8000c76:	d501      	bpl.n	8000c7c <_printf_i+0xec>
 8000c78:	681e      	ldr	r6, [r3, #0]
 8000c7a:	e002      	b.n	8000c82 <_printf_i+0xf2>
 8000c7c:	0646      	lsls	r6, r0, #25
 8000c7e:	d5fb      	bpl.n	8000c78 <_printf_i+0xe8>
 8000c80:	881e      	ldrh	r6, [r3, #0]
 8000c82:	2f6f      	cmp	r7, #111	; 0x6f
 8000c84:	bf0c      	ite	eq
 8000c86:	2308      	moveq	r3, #8
 8000c88:	230a      	movne	r3, #10
 8000c8a:	4852      	ldr	r0, [pc, #328]	; (8000dd4 <_printf_i+0x244>)
 8000c8c:	2100      	movs	r1, #0
 8000c8e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000c92:	6865      	ldr	r5, [r4, #4]
 8000c94:	2d00      	cmp	r5, #0
 8000c96:	bfa8      	it	ge
 8000c98:	6821      	ldrge	r1, [r4, #0]
 8000c9a:	60a5      	str	r5, [r4, #8]
 8000c9c:	bfa4      	itt	ge
 8000c9e:	f021 0104 	bicge.w	r1, r1, #4
 8000ca2:	6021      	strge	r1, [r4, #0]
 8000ca4:	b90e      	cbnz	r6, 8000caa <_printf_i+0x11a>
 8000ca6:	2d00      	cmp	r5, #0
 8000ca8:	d04d      	beq.n	8000d46 <_printf_i+0x1b6>
 8000caa:	4615      	mov	r5, r2
 8000cac:	fbb6 f1f3 	udiv	r1, r6, r3
 8000cb0:	fb03 6711 	mls	r7, r3, r1, r6
 8000cb4:	5dc7      	ldrb	r7, [r0, r7]
 8000cb6:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000cba:	4637      	mov	r7, r6
 8000cbc:	42bb      	cmp	r3, r7
 8000cbe:	460e      	mov	r6, r1
 8000cc0:	d9f4      	bls.n	8000cac <_printf_i+0x11c>
 8000cc2:	2b08      	cmp	r3, #8
 8000cc4:	d10b      	bne.n	8000cde <_printf_i+0x14e>
 8000cc6:	6823      	ldr	r3, [r4, #0]
 8000cc8:	07de      	lsls	r6, r3, #31
 8000cca:	d508      	bpl.n	8000cde <_printf_i+0x14e>
 8000ccc:	6923      	ldr	r3, [r4, #16]
 8000cce:	6861      	ldr	r1, [r4, #4]
 8000cd0:	4299      	cmp	r1, r3
 8000cd2:	bfde      	ittt	le
 8000cd4:	2330      	movle	r3, #48	; 0x30
 8000cd6:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000cda:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000cde:	1b52      	subs	r2, r2, r5
 8000ce0:	6122      	str	r2, [r4, #16]
 8000ce2:	464b      	mov	r3, r9
 8000ce4:	4621      	mov	r1, r4
 8000ce6:	4640      	mov	r0, r8
 8000ce8:	f8cd a000 	str.w	sl, [sp]
 8000cec:	aa03      	add	r2, sp, #12
 8000cee:	f7ff fedf 	bl	8000ab0 <_printf_common>
 8000cf2:	3001      	adds	r0, #1
 8000cf4:	d14c      	bne.n	8000d90 <_printf_i+0x200>
 8000cf6:	f04f 30ff 	mov.w	r0, #4294967295
 8000cfa:	b004      	add	sp, #16
 8000cfc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d00:	4834      	ldr	r0, [pc, #208]	; (8000dd4 <_printf_i+0x244>)
 8000d02:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8000d06:	6829      	ldr	r1, [r5, #0]
 8000d08:	6823      	ldr	r3, [r4, #0]
 8000d0a:	f851 6b04 	ldr.w	r6, [r1], #4
 8000d0e:	6029      	str	r1, [r5, #0]
 8000d10:	061d      	lsls	r5, r3, #24
 8000d12:	d514      	bpl.n	8000d3e <_printf_i+0x1ae>
 8000d14:	07df      	lsls	r7, r3, #31
 8000d16:	bf44      	itt	mi
 8000d18:	f043 0320 	orrmi.w	r3, r3, #32
 8000d1c:	6023      	strmi	r3, [r4, #0]
 8000d1e:	b91e      	cbnz	r6, 8000d28 <_printf_i+0x198>
 8000d20:	6823      	ldr	r3, [r4, #0]
 8000d22:	f023 0320 	bic.w	r3, r3, #32
 8000d26:	6023      	str	r3, [r4, #0]
 8000d28:	2310      	movs	r3, #16
 8000d2a:	e7af      	b.n	8000c8c <_printf_i+0xfc>
 8000d2c:	6823      	ldr	r3, [r4, #0]
 8000d2e:	f043 0320 	orr.w	r3, r3, #32
 8000d32:	6023      	str	r3, [r4, #0]
 8000d34:	2378      	movs	r3, #120	; 0x78
 8000d36:	4828      	ldr	r0, [pc, #160]	; (8000dd8 <_printf_i+0x248>)
 8000d38:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000d3c:	e7e3      	b.n	8000d06 <_printf_i+0x176>
 8000d3e:	0659      	lsls	r1, r3, #25
 8000d40:	bf48      	it	mi
 8000d42:	b2b6      	uxthmi	r6, r6
 8000d44:	e7e6      	b.n	8000d14 <_printf_i+0x184>
 8000d46:	4615      	mov	r5, r2
 8000d48:	e7bb      	b.n	8000cc2 <_printf_i+0x132>
 8000d4a:	682b      	ldr	r3, [r5, #0]
 8000d4c:	6826      	ldr	r6, [r4, #0]
 8000d4e:	1d18      	adds	r0, r3, #4
 8000d50:	6961      	ldr	r1, [r4, #20]
 8000d52:	6028      	str	r0, [r5, #0]
 8000d54:	0635      	lsls	r5, r6, #24
 8000d56:	681b      	ldr	r3, [r3, #0]
 8000d58:	d501      	bpl.n	8000d5e <_printf_i+0x1ce>
 8000d5a:	6019      	str	r1, [r3, #0]
 8000d5c:	e002      	b.n	8000d64 <_printf_i+0x1d4>
 8000d5e:	0670      	lsls	r0, r6, #25
 8000d60:	d5fb      	bpl.n	8000d5a <_printf_i+0x1ca>
 8000d62:	8019      	strh	r1, [r3, #0]
 8000d64:	2300      	movs	r3, #0
 8000d66:	4615      	mov	r5, r2
 8000d68:	6123      	str	r3, [r4, #16]
 8000d6a:	e7ba      	b.n	8000ce2 <_printf_i+0x152>
 8000d6c:	682b      	ldr	r3, [r5, #0]
 8000d6e:	2100      	movs	r1, #0
 8000d70:	1d1a      	adds	r2, r3, #4
 8000d72:	602a      	str	r2, [r5, #0]
 8000d74:	681d      	ldr	r5, [r3, #0]
 8000d76:	6862      	ldr	r2, [r4, #4]
 8000d78:	4628      	mov	r0, r5
 8000d7a:	f000 fa9b 	bl	80012b4 <memchr>
 8000d7e:	b108      	cbz	r0, 8000d84 <_printf_i+0x1f4>
 8000d80:	1b40      	subs	r0, r0, r5
 8000d82:	6060      	str	r0, [r4, #4]
 8000d84:	6863      	ldr	r3, [r4, #4]
 8000d86:	6123      	str	r3, [r4, #16]
 8000d88:	2300      	movs	r3, #0
 8000d8a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000d8e:	e7a8      	b.n	8000ce2 <_printf_i+0x152>
 8000d90:	462a      	mov	r2, r5
 8000d92:	4649      	mov	r1, r9
 8000d94:	4640      	mov	r0, r8
 8000d96:	6923      	ldr	r3, [r4, #16]
 8000d98:	47d0      	blx	sl
 8000d9a:	3001      	adds	r0, #1
 8000d9c:	d0ab      	beq.n	8000cf6 <_printf_i+0x166>
 8000d9e:	6823      	ldr	r3, [r4, #0]
 8000da0:	079b      	lsls	r3, r3, #30
 8000da2:	d413      	bmi.n	8000dcc <_printf_i+0x23c>
 8000da4:	68e0      	ldr	r0, [r4, #12]
 8000da6:	9b03      	ldr	r3, [sp, #12]
 8000da8:	4298      	cmp	r0, r3
 8000daa:	bfb8      	it	lt
 8000dac:	4618      	movlt	r0, r3
 8000dae:	e7a4      	b.n	8000cfa <_printf_i+0x16a>
 8000db0:	2301      	movs	r3, #1
 8000db2:	4632      	mov	r2, r6
 8000db4:	4649      	mov	r1, r9
 8000db6:	4640      	mov	r0, r8
 8000db8:	47d0      	blx	sl
 8000dba:	3001      	adds	r0, #1
 8000dbc:	d09b      	beq.n	8000cf6 <_printf_i+0x166>
 8000dbe:	3501      	adds	r5, #1
 8000dc0:	68e3      	ldr	r3, [r4, #12]
 8000dc2:	9903      	ldr	r1, [sp, #12]
 8000dc4:	1a5b      	subs	r3, r3, r1
 8000dc6:	42ab      	cmp	r3, r5
 8000dc8:	dcf2      	bgt.n	8000db0 <_printf_i+0x220>
 8000dca:	e7eb      	b.n	8000da4 <_printf_i+0x214>
 8000dcc:	2500      	movs	r5, #0
 8000dce:	f104 0619 	add.w	r6, r4, #25
 8000dd2:	e7f5      	b.n	8000dc0 <_printf_i+0x230>
 8000dd4:	0800147d 	.word	0x0800147d
 8000dd8:	0800148e 	.word	0x0800148e

08000ddc <_sbrk_r>:
 8000ddc:	b538      	push	{r3, r4, r5, lr}
 8000dde:	2300      	movs	r3, #0
 8000de0:	4d05      	ldr	r5, [pc, #20]	; (8000df8 <_sbrk_r+0x1c>)
 8000de2:	4604      	mov	r4, r0
 8000de4:	4608      	mov	r0, r1
 8000de6:	602b      	str	r3, [r5, #0]
 8000de8:	f7ff fa3a 	bl	8000260 <_sbrk>
 8000dec:	1c43      	adds	r3, r0, #1
 8000dee:	d102      	bne.n	8000df6 <_sbrk_r+0x1a>
 8000df0:	682b      	ldr	r3, [r5, #0]
 8000df2:	b103      	cbz	r3, 8000df6 <_sbrk_r+0x1a>
 8000df4:	6023      	str	r3, [r4, #0]
 8000df6:	bd38      	pop	{r3, r4, r5, pc}
 8000df8:	20000090 	.word	0x20000090

08000dfc <__sread>:
 8000dfc:	b510      	push	{r4, lr}
 8000dfe:	460c      	mov	r4, r1
 8000e00:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e04:	f000 fab8 	bl	8001378 <_read_r>
 8000e08:	2800      	cmp	r0, #0
 8000e0a:	bfab      	itete	ge
 8000e0c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000e0e:	89a3      	ldrhlt	r3, [r4, #12]
 8000e10:	181b      	addge	r3, r3, r0
 8000e12:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000e16:	bfac      	ite	ge
 8000e18:	6563      	strge	r3, [r4, #84]	; 0x54
 8000e1a:	81a3      	strhlt	r3, [r4, #12]
 8000e1c:	bd10      	pop	{r4, pc}

08000e1e <__swrite>:
 8000e1e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e22:	461f      	mov	r7, r3
 8000e24:	898b      	ldrh	r3, [r1, #12]
 8000e26:	4605      	mov	r5, r0
 8000e28:	05db      	lsls	r3, r3, #23
 8000e2a:	460c      	mov	r4, r1
 8000e2c:	4616      	mov	r6, r2
 8000e2e:	d505      	bpl.n	8000e3c <__swrite+0x1e>
 8000e30:	2302      	movs	r3, #2
 8000e32:	2200      	movs	r2, #0
 8000e34:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e38:	f000 f9c4 	bl	80011c4 <_lseek_r>
 8000e3c:	89a3      	ldrh	r3, [r4, #12]
 8000e3e:	4632      	mov	r2, r6
 8000e40:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000e44:	81a3      	strh	r3, [r4, #12]
 8000e46:	4628      	mov	r0, r5
 8000e48:	463b      	mov	r3, r7
 8000e4a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000e4e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000e52:	f000 b869 	b.w	8000f28 <_write_r>

08000e56 <__sseek>:
 8000e56:	b510      	push	{r4, lr}
 8000e58:	460c      	mov	r4, r1
 8000e5a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e5e:	f000 f9b1 	bl	80011c4 <_lseek_r>
 8000e62:	1c43      	adds	r3, r0, #1
 8000e64:	89a3      	ldrh	r3, [r4, #12]
 8000e66:	bf15      	itete	ne
 8000e68:	6560      	strne	r0, [r4, #84]	; 0x54
 8000e6a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000e6e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000e72:	81a3      	strheq	r3, [r4, #12]
 8000e74:	bf18      	it	ne
 8000e76:	81a3      	strhne	r3, [r4, #12]
 8000e78:	bd10      	pop	{r4, pc}

08000e7a <__sclose>:
 8000e7a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e7e:	f000 b8d3 	b.w	8001028 <_close_r>
	...

08000e84 <__swbuf_r>:
 8000e84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e86:	460e      	mov	r6, r1
 8000e88:	4614      	mov	r4, r2
 8000e8a:	4605      	mov	r5, r0
 8000e8c:	b118      	cbz	r0, 8000e96 <__swbuf_r+0x12>
 8000e8e:	6983      	ldr	r3, [r0, #24]
 8000e90:	b90b      	cbnz	r3, 8000e96 <__swbuf_r+0x12>
 8000e92:	f7ff fb81 	bl	8000598 <__sinit>
 8000e96:	4b21      	ldr	r3, [pc, #132]	; (8000f1c <__swbuf_r+0x98>)
 8000e98:	429c      	cmp	r4, r3
 8000e9a:	d12b      	bne.n	8000ef4 <__swbuf_r+0x70>
 8000e9c:	686c      	ldr	r4, [r5, #4]
 8000e9e:	69a3      	ldr	r3, [r4, #24]
 8000ea0:	60a3      	str	r3, [r4, #8]
 8000ea2:	89a3      	ldrh	r3, [r4, #12]
 8000ea4:	071a      	lsls	r2, r3, #28
 8000ea6:	d52f      	bpl.n	8000f08 <__swbuf_r+0x84>
 8000ea8:	6923      	ldr	r3, [r4, #16]
 8000eaa:	b36b      	cbz	r3, 8000f08 <__swbuf_r+0x84>
 8000eac:	6923      	ldr	r3, [r4, #16]
 8000eae:	6820      	ldr	r0, [r4, #0]
 8000eb0:	b2f6      	uxtb	r6, r6
 8000eb2:	1ac0      	subs	r0, r0, r3
 8000eb4:	6963      	ldr	r3, [r4, #20]
 8000eb6:	4637      	mov	r7, r6
 8000eb8:	4283      	cmp	r3, r0
 8000eba:	dc04      	bgt.n	8000ec6 <__swbuf_r+0x42>
 8000ebc:	4621      	mov	r1, r4
 8000ebe:	4628      	mov	r0, r5
 8000ec0:	f000 f944 	bl	800114c <_fflush_r>
 8000ec4:	bb30      	cbnz	r0, 8000f14 <__swbuf_r+0x90>
 8000ec6:	68a3      	ldr	r3, [r4, #8]
 8000ec8:	3001      	adds	r0, #1
 8000eca:	3b01      	subs	r3, #1
 8000ecc:	60a3      	str	r3, [r4, #8]
 8000ece:	6823      	ldr	r3, [r4, #0]
 8000ed0:	1c5a      	adds	r2, r3, #1
 8000ed2:	6022      	str	r2, [r4, #0]
 8000ed4:	701e      	strb	r6, [r3, #0]
 8000ed6:	6963      	ldr	r3, [r4, #20]
 8000ed8:	4283      	cmp	r3, r0
 8000eda:	d004      	beq.n	8000ee6 <__swbuf_r+0x62>
 8000edc:	89a3      	ldrh	r3, [r4, #12]
 8000ede:	07db      	lsls	r3, r3, #31
 8000ee0:	d506      	bpl.n	8000ef0 <__swbuf_r+0x6c>
 8000ee2:	2e0a      	cmp	r6, #10
 8000ee4:	d104      	bne.n	8000ef0 <__swbuf_r+0x6c>
 8000ee6:	4621      	mov	r1, r4
 8000ee8:	4628      	mov	r0, r5
 8000eea:	f000 f92f 	bl	800114c <_fflush_r>
 8000eee:	b988      	cbnz	r0, 8000f14 <__swbuf_r+0x90>
 8000ef0:	4638      	mov	r0, r7
 8000ef2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000ef4:	4b0a      	ldr	r3, [pc, #40]	; (8000f20 <__swbuf_r+0x9c>)
 8000ef6:	429c      	cmp	r4, r3
 8000ef8:	d101      	bne.n	8000efe <__swbuf_r+0x7a>
 8000efa:	68ac      	ldr	r4, [r5, #8]
 8000efc:	e7cf      	b.n	8000e9e <__swbuf_r+0x1a>
 8000efe:	4b09      	ldr	r3, [pc, #36]	; (8000f24 <__swbuf_r+0xa0>)
 8000f00:	429c      	cmp	r4, r3
 8000f02:	bf08      	it	eq
 8000f04:	68ec      	ldreq	r4, [r5, #12]
 8000f06:	e7ca      	b.n	8000e9e <__swbuf_r+0x1a>
 8000f08:	4621      	mov	r1, r4
 8000f0a:	4628      	mov	r0, r5
 8000f0c:	f000 f81e 	bl	8000f4c <__swsetup_r>
 8000f10:	2800      	cmp	r0, #0
 8000f12:	d0cb      	beq.n	8000eac <__swbuf_r+0x28>
 8000f14:	f04f 37ff 	mov.w	r7, #4294967295
 8000f18:	e7ea      	b.n	8000ef0 <__swbuf_r+0x6c>
 8000f1a:	bf00      	nop
 8000f1c:	0800142c 	.word	0x0800142c
 8000f20:	0800144c 	.word	0x0800144c
 8000f24:	0800140c 	.word	0x0800140c

08000f28 <_write_r>:
 8000f28:	b538      	push	{r3, r4, r5, lr}
 8000f2a:	4604      	mov	r4, r0
 8000f2c:	4608      	mov	r0, r1
 8000f2e:	4611      	mov	r1, r2
 8000f30:	2200      	movs	r2, #0
 8000f32:	4d05      	ldr	r5, [pc, #20]	; (8000f48 <_write_r+0x20>)
 8000f34:	602a      	str	r2, [r5, #0]
 8000f36:	461a      	mov	r2, r3
 8000f38:	f7ff f945 	bl	80001c6 <_write>
 8000f3c:	1c43      	adds	r3, r0, #1
 8000f3e:	d102      	bne.n	8000f46 <_write_r+0x1e>
 8000f40:	682b      	ldr	r3, [r5, #0]
 8000f42:	b103      	cbz	r3, 8000f46 <_write_r+0x1e>
 8000f44:	6023      	str	r3, [r4, #0]
 8000f46:	bd38      	pop	{r3, r4, r5, pc}
 8000f48:	20000090 	.word	0x20000090

08000f4c <__swsetup_r>:
 8000f4c:	4b32      	ldr	r3, [pc, #200]	; (8001018 <__swsetup_r+0xcc>)
 8000f4e:	b570      	push	{r4, r5, r6, lr}
 8000f50:	681d      	ldr	r5, [r3, #0]
 8000f52:	4606      	mov	r6, r0
 8000f54:	460c      	mov	r4, r1
 8000f56:	b125      	cbz	r5, 8000f62 <__swsetup_r+0x16>
 8000f58:	69ab      	ldr	r3, [r5, #24]
 8000f5a:	b913      	cbnz	r3, 8000f62 <__swsetup_r+0x16>
 8000f5c:	4628      	mov	r0, r5
 8000f5e:	f7ff fb1b 	bl	8000598 <__sinit>
 8000f62:	4b2e      	ldr	r3, [pc, #184]	; (800101c <__swsetup_r+0xd0>)
 8000f64:	429c      	cmp	r4, r3
 8000f66:	d10f      	bne.n	8000f88 <__swsetup_r+0x3c>
 8000f68:	686c      	ldr	r4, [r5, #4]
 8000f6a:	89a3      	ldrh	r3, [r4, #12]
 8000f6c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000f70:	0719      	lsls	r1, r3, #28
 8000f72:	d42c      	bmi.n	8000fce <__swsetup_r+0x82>
 8000f74:	06dd      	lsls	r5, r3, #27
 8000f76:	d411      	bmi.n	8000f9c <__swsetup_r+0x50>
 8000f78:	2309      	movs	r3, #9
 8000f7a:	6033      	str	r3, [r6, #0]
 8000f7c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000f80:	f04f 30ff 	mov.w	r0, #4294967295
 8000f84:	81a3      	strh	r3, [r4, #12]
 8000f86:	e03e      	b.n	8001006 <__swsetup_r+0xba>
 8000f88:	4b25      	ldr	r3, [pc, #148]	; (8001020 <__swsetup_r+0xd4>)
 8000f8a:	429c      	cmp	r4, r3
 8000f8c:	d101      	bne.n	8000f92 <__swsetup_r+0x46>
 8000f8e:	68ac      	ldr	r4, [r5, #8]
 8000f90:	e7eb      	b.n	8000f6a <__swsetup_r+0x1e>
 8000f92:	4b24      	ldr	r3, [pc, #144]	; (8001024 <__swsetup_r+0xd8>)
 8000f94:	429c      	cmp	r4, r3
 8000f96:	bf08      	it	eq
 8000f98:	68ec      	ldreq	r4, [r5, #12]
 8000f9a:	e7e6      	b.n	8000f6a <__swsetup_r+0x1e>
 8000f9c:	0758      	lsls	r0, r3, #29
 8000f9e:	d512      	bpl.n	8000fc6 <__swsetup_r+0x7a>
 8000fa0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000fa2:	b141      	cbz	r1, 8000fb6 <__swsetup_r+0x6a>
 8000fa4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000fa8:	4299      	cmp	r1, r3
 8000faa:	d002      	beq.n	8000fb2 <__swsetup_r+0x66>
 8000fac:	4630      	mov	r0, r6
 8000fae:	f000 f99b 	bl	80012e8 <_free_r>
 8000fb2:	2300      	movs	r3, #0
 8000fb4:	6363      	str	r3, [r4, #52]	; 0x34
 8000fb6:	89a3      	ldrh	r3, [r4, #12]
 8000fb8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000fbc:	81a3      	strh	r3, [r4, #12]
 8000fbe:	2300      	movs	r3, #0
 8000fc0:	6063      	str	r3, [r4, #4]
 8000fc2:	6923      	ldr	r3, [r4, #16]
 8000fc4:	6023      	str	r3, [r4, #0]
 8000fc6:	89a3      	ldrh	r3, [r4, #12]
 8000fc8:	f043 0308 	orr.w	r3, r3, #8
 8000fcc:	81a3      	strh	r3, [r4, #12]
 8000fce:	6923      	ldr	r3, [r4, #16]
 8000fd0:	b94b      	cbnz	r3, 8000fe6 <__swsetup_r+0x9a>
 8000fd2:	89a3      	ldrh	r3, [r4, #12]
 8000fd4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000fd8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000fdc:	d003      	beq.n	8000fe6 <__swsetup_r+0x9a>
 8000fde:	4621      	mov	r1, r4
 8000fe0:	4630      	mov	r0, r6
 8000fe2:	f000 f927 	bl	8001234 <__smakebuf_r>
 8000fe6:	89a0      	ldrh	r0, [r4, #12]
 8000fe8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000fec:	f010 0301 	ands.w	r3, r0, #1
 8000ff0:	d00a      	beq.n	8001008 <__swsetup_r+0xbc>
 8000ff2:	2300      	movs	r3, #0
 8000ff4:	60a3      	str	r3, [r4, #8]
 8000ff6:	6963      	ldr	r3, [r4, #20]
 8000ff8:	425b      	negs	r3, r3
 8000ffa:	61a3      	str	r3, [r4, #24]
 8000ffc:	6923      	ldr	r3, [r4, #16]
 8000ffe:	b943      	cbnz	r3, 8001012 <__swsetup_r+0xc6>
 8001000:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001004:	d1ba      	bne.n	8000f7c <__swsetup_r+0x30>
 8001006:	bd70      	pop	{r4, r5, r6, pc}
 8001008:	0781      	lsls	r1, r0, #30
 800100a:	bf58      	it	pl
 800100c:	6963      	ldrpl	r3, [r4, #20]
 800100e:	60a3      	str	r3, [r4, #8]
 8001010:	e7f4      	b.n	8000ffc <__swsetup_r+0xb0>
 8001012:	2000      	movs	r0, #0
 8001014:	e7f7      	b.n	8001006 <__swsetup_r+0xba>
 8001016:	bf00      	nop
 8001018:	20000000 	.word	0x20000000
 800101c:	0800142c 	.word	0x0800142c
 8001020:	0800144c 	.word	0x0800144c
 8001024:	0800140c 	.word	0x0800140c

08001028 <_close_r>:
 8001028:	b538      	push	{r3, r4, r5, lr}
 800102a:	2300      	movs	r3, #0
 800102c:	4d05      	ldr	r5, [pc, #20]	; (8001044 <_close_r+0x1c>)
 800102e:	4604      	mov	r4, r0
 8001030:	4608      	mov	r0, r1
 8001032:	602b      	str	r3, [r5, #0]
 8001034:	f7ff f8e3 	bl	80001fe <_close>
 8001038:	1c43      	adds	r3, r0, #1
 800103a:	d102      	bne.n	8001042 <_close_r+0x1a>
 800103c:	682b      	ldr	r3, [r5, #0]
 800103e:	b103      	cbz	r3, 8001042 <_close_r+0x1a>
 8001040:	6023      	str	r3, [r4, #0]
 8001042:	bd38      	pop	{r3, r4, r5, pc}
 8001044:	20000090 	.word	0x20000090

08001048 <__sflush_r>:
 8001048:	898a      	ldrh	r2, [r1, #12]
 800104a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800104c:	4605      	mov	r5, r0
 800104e:	0710      	lsls	r0, r2, #28
 8001050:	460c      	mov	r4, r1
 8001052:	d457      	bmi.n	8001104 <__sflush_r+0xbc>
 8001054:	684b      	ldr	r3, [r1, #4]
 8001056:	2b00      	cmp	r3, #0
 8001058:	dc04      	bgt.n	8001064 <__sflush_r+0x1c>
 800105a:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800105c:	2b00      	cmp	r3, #0
 800105e:	dc01      	bgt.n	8001064 <__sflush_r+0x1c>
 8001060:	2000      	movs	r0, #0
 8001062:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001064:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001066:	2e00      	cmp	r6, #0
 8001068:	d0fa      	beq.n	8001060 <__sflush_r+0x18>
 800106a:	2300      	movs	r3, #0
 800106c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001070:	682f      	ldr	r7, [r5, #0]
 8001072:	602b      	str	r3, [r5, #0]
 8001074:	d032      	beq.n	80010dc <__sflush_r+0x94>
 8001076:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001078:	89a3      	ldrh	r3, [r4, #12]
 800107a:	075a      	lsls	r2, r3, #29
 800107c:	d505      	bpl.n	800108a <__sflush_r+0x42>
 800107e:	6863      	ldr	r3, [r4, #4]
 8001080:	1ac0      	subs	r0, r0, r3
 8001082:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001084:	b10b      	cbz	r3, 800108a <__sflush_r+0x42>
 8001086:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001088:	1ac0      	subs	r0, r0, r3
 800108a:	2300      	movs	r3, #0
 800108c:	4602      	mov	r2, r0
 800108e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001090:	4628      	mov	r0, r5
 8001092:	6a21      	ldr	r1, [r4, #32]
 8001094:	47b0      	blx	r6
 8001096:	1c43      	adds	r3, r0, #1
 8001098:	89a3      	ldrh	r3, [r4, #12]
 800109a:	d106      	bne.n	80010aa <__sflush_r+0x62>
 800109c:	6829      	ldr	r1, [r5, #0]
 800109e:	291d      	cmp	r1, #29
 80010a0:	d82c      	bhi.n	80010fc <__sflush_r+0xb4>
 80010a2:	4a29      	ldr	r2, [pc, #164]	; (8001148 <__sflush_r+0x100>)
 80010a4:	40ca      	lsrs	r2, r1
 80010a6:	07d6      	lsls	r6, r2, #31
 80010a8:	d528      	bpl.n	80010fc <__sflush_r+0xb4>
 80010aa:	2200      	movs	r2, #0
 80010ac:	6062      	str	r2, [r4, #4]
 80010ae:	6922      	ldr	r2, [r4, #16]
 80010b0:	04d9      	lsls	r1, r3, #19
 80010b2:	6022      	str	r2, [r4, #0]
 80010b4:	d504      	bpl.n	80010c0 <__sflush_r+0x78>
 80010b6:	1c42      	adds	r2, r0, #1
 80010b8:	d101      	bne.n	80010be <__sflush_r+0x76>
 80010ba:	682b      	ldr	r3, [r5, #0]
 80010bc:	b903      	cbnz	r3, 80010c0 <__sflush_r+0x78>
 80010be:	6560      	str	r0, [r4, #84]	; 0x54
 80010c0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80010c2:	602f      	str	r7, [r5, #0]
 80010c4:	2900      	cmp	r1, #0
 80010c6:	d0cb      	beq.n	8001060 <__sflush_r+0x18>
 80010c8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80010cc:	4299      	cmp	r1, r3
 80010ce:	d002      	beq.n	80010d6 <__sflush_r+0x8e>
 80010d0:	4628      	mov	r0, r5
 80010d2:	f000 f909 	bl	80012e8 <_free_r>
 80010d6:	2000      	movs	r0, #0
 80010d8:	6360      	str	r0, [r4, #52]	; 0x34
 80010da:	e7c2      	b.n	8001062 <__sflush_r+0x1a>
 80010dc:	6a21      	ldr	r1, [r4, #32]
 80010de:	2301      	movs	r3, #1
 80010e0:	4628      	mov	r0, r5
 80010e2:	47b0      	blx	r6
 80010e4:	1c41      	adds	r1, r0, #1
 80010e6:	d1c7      	bne.n	8001078 <__sflush_r+0x30>
 80010e8:	682b      	ldr	r3, [r5, #0]
 80010ea:	2b00      	cmp	r3, #0
 80010ec:	d0c4      	beq.n	8001078 <__sflush_r+0x30>
 80010ee:	2b1d      	cmp	r3, #29
 80010f0:	d001      	beq.n	80010f6 <__sflush_r+0xae>
 80010f2:	2b16      	cmp	r3, #22
 80010f4:	d101      	bne.n	80010fa <__sflush_r+0xb2>
 80010f6:	602f      	str	r7, [r5, #0]
 80010f8:	e7b2      	b.n	8001060 <__sflush_r+0x18>
 80010fa:	89a3      	ldrh	r3, [r4, #12]
 80010fc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001100:	81a3      	strh	r3, [r4, #12]
 8001102:	e7ae      	b.n	8001062 <__sflush_r+0x1a>
 8001104:	690f      	ldr	r7, [r1, #16]
 8001106:	2f00      	cmp	r7, #0
 8001108:	d0aa      	beq.n	8001060 <__sflush_r+0x18>
 800110a:	0793      	lsls	r3, r2, #30
 800110c:	bf18      	it	ne
 800110e:	2300      	movne	r3, #0
 8001110:	680e      	ldr	r6, [r1, #0]
 8001112:	bf08      	it	eq
 8001114:	694b      	ldreq	r3, [r1, #20]
 8001116:	1bf6      	subs	r6, r6, r7
 8001118:	600f      	str	r7, [r1, #0]
 800111a:	608b      	str	r3, [r1, #8]
 800111c:	2e00      	cmp	r6, #0
 800111e:	dd9f      	ble.n	8001060 <__sflush_r+0x18>
 8001120:	4633      	mov	r3, r6
 8001122:	463a      	mov	r2, r7
 8001124:	4628      	mov	r0, r5
 8001126:	6a21      	ldr	r1, [r4, #32]
 8001128:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 800112c:	47e0      	blx	ip
 800112e:	2800      	cmp	r0, #0
 8001130:	dc06      	bgt.n	8001140 <__sflush_r+0xf8>
 8001132:	89a3      	ldrh	r3, [r4, #12]
 8001134:	f04f 30ff 	mov.w	r0, #4294967295
 8001138:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800113c:	81a3      	strh	r3, [r4, #12]
 800113e:	e790      	b.n	8001062 <__sflush_r+0x1a>
 8001140:	4407      	add	r7, r0
 8001142:	1a36      	subs	r6, r6, r0
 8001144:	e7ea      	b.n	800111c <__sflush_r+0xd4>
 8001146:	bf00      	nop
 8001148:	20400001 	.word	0x20400001

0800114c <_fflush_r>:
 800114c:	b538      	push	{r3, r4, r5, lr}
 800114e:	690b      	ldr	r3, [r1, #16]
 8001150:	4605      	mov	r5, r0
 8001152:	460c      	mov	r4, r1
 8001154:	b913      	cbnz	r3, 800115c <_fflush_r+0x10>
 8001156:	2500      	movs	r5, #0
 8001158:	4628      	mov	r0, r5
 800115a:	bd38      	pop	{r3, r4, r5, pc}
 800115c:	b118      	cbz	r0, 8001166 <_fflush_r+0x1a>
 800115e:	6983      	ldr	r3, [r0, #24]
 8001160:	b90b      	cbnz	r3, 8001166 <_fflush_r+0x1a>
 8001162:	f7ff fa19 	bl	8000598 <__sinit>
 8001166:	4b14      	ldr	r3, [pc, #80]	; (80011b8 <_fflush_r+0x6c>)
 8001168:	429c      	cmp	r4, r3
 800116a:	d11b      	bne.n	80011a4 <_fflush_r+0x58>
 800116c:	686c      	ldr	r4, [r5, #4]
 800116e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001172:	2b00      	cmp	r3, #0
 8001174:	d0ef      	beq.n	8001156 <_fflush_r+0xa>
 8001176:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001178:	07d0      	lsls	r0, r2, #31
 800117a:	d404      	bmi.n	8001186 <_fflush_r+0x3a>
 800117c:	0599      	lsls	r1, r3, #22
 800117e:	d402      	bmi.n	8001186 <_fflush_r+0x3a>
 8001180:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001182:	f7ff faa7 	bl	80006d4 <__retarget_lock_acquire_recursive>
 8001186:	4628      	mov	r0, r5
 8001188:	4621      	mov	r1, r4
 800118a:	f7ff ff5d 	bl	8001048 <__sflush_r>
 800118e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001190:	4605      	mov	r5, r0
 8001192:	07da      	lsls	r2, r3, #31
 8001194:	d4e0      	bmi.n	8001158 <_fflush_r+0xc>
 8001196:	89a3      	ldrh	r3, [r4, #12]
 8001198:	059b      	lsls	r3, r3, #22
 800119a:	d4dd      	bmi.n	8001158 <_fflush_r+0xc>
 800119c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800119e:	f7ff fa9a 	bl	80006d6 <__retarget_lock_release_recursive>
 80011a2:	e7d9      	b.n	8001158 <_fflush_r+0xc>
 80011a4:	4b05      	ldr	r3, [pc, #20]	; (80011bc <_fflush_r+0x70>)
 80011a6:	429c      	cmp	r4, r3
 80011a8:	d101      	bne.n	80011ae <_fflush_r+0x62>
 80011aa:	68ac      	ldr	r4, [r5, #8]
 80011ac:	e7df      	b.n	800116e <_fflush_r+0x22>
 80011ae:	4b04      	ldr	r3, [pc, #16]	; (80011c0 <_fflush_r+0x74>)
 80011b0:	429c      	cmp	r4, r3
 80011b2:	bf08      	it	eq
 80011b4:	68ec      	ldreq	r4, [r5, #12]
 80011b6:	e7da      	b.n	800116e <_fflush_r+0x22>
 80011b8:	0800142c 	.word	0x0800142c
 80011bc:	0800144c 	.word	0x0800144c
 80011c0:	0800140c 	.word	0x0800140c

080011c4 <_lseek_r>:
 80011c4:	b538      	push	{r3, r4, r5, lr}
 80011c6:	4604      	mov	r4, r0
 80011c8:	4608      	mov	r0, r1
 80011ca:	4611      	mov	r1, r2
 80011cc:	2200      	movs	r2, #0
 80011ce:	4d05      	ldr	r5, [pc, #20]	; (80011e4 <_lseek_r+0x20>)
 80011d0:	602a      	str	r2, [r5, #0]
 80011d2:	461a      	mov	r2, r3
 80011d4:	f7ff f837 	bl	8000246 <_lseek>
 80011d8:	1c43      	adds	r3, r0, #1
 80011da:	d102      	bne.n	80011e2 <_lseek_r+0x1e>
 80011dc:	682b      	ldr	r3, [r5, #0]
 80011de:	b103      	cbz	r3, 80011e2 <_lseek_r+0x1e>
 80011e0:	6023      	str	r3, [r4, #0]
 80011e2:	bd38      	pop	{r3, r4, r5, pc}
 80011e4:	20000090 	.word	0x20000090

080011e8 <__swhatbuf_r>:
 80011e8:	b570      	push	{r4, r5, r6, lr}
 80011ea:	460e      	mov	r6, r1
 80011ec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80011f0:	4614      	mov	r4, r2
 80011f2:	2900      	cmp	r1, #0
 80011f4:	461d      	mov	r5, r3
 80011f6:	b096      	sub	sp, #88	; 0x58
 80011f8:	da08      	bge.n	800120c <__swhatbuf_r+0x24>
 80011fa:	2200      	movs	r2, #0
 80011fc:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8001200:	602a      	str	r2, [r5, #0]
 8001202:	061a      	lsls	r2, r3, #24
 8001204:	d410      	bmi.n	8001228 <__swhatbuf_r+0x40>
 8001206:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800120a:	e00e      	b.n	800122a <__swhatbuf_r+0x42>
 800120c:	466a      	mov	r2, sp
 800120e:	f000 f8c5 	bl	800139c <_fstat_r>
 8001212:	2800      	cmp	r0, #0
 8001214:	dbf1      	blt.n	80011fa <__swhatbuf_r+0x12>
 8001216:	9a01      	ldr	r2, [sp, #4]
 8001218:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800121c:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8001220:	425a      	negs	r2, r3
 8001222:	415a      	adcs	r2, r3
 8001224:	602a      	str	r2, [r5, #0]
 8001226:	e7ee      	b.n	8001206 <__swhatbuf_r+0x1e>
 8001228:	2340      	movs	r3, #64	; 0x40
 800122a:	2000      	movs	r0, #0
 800122c:	6023      	str	r3, [r4, #0]
 800122e:	b016      	add	sp, #88	; 0x58
 8001230:	bd70      	pop	{r4, r5, r6, pc}
	...

08001234 <__smakebuf_r>:
 8001234:	898b      	ldrh	r3, [r1, #12]
 8001236:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001238:	079d      	lsls	r5, r3, #30
 800123a:	4606      	mov	r6, r0
 800123c:	460c      	mov	r4, r1
 800123e:	d507      	bpl.n	8001250 <__smakebuf_r+0x1c>
 8001240:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001244:	6023      	str	r3, [r4, #0]
 8001246:	6123      	str	r3, [r4, #16]
 8001248:	2301      	movs	r3, #1
 800124a:	6163      	str	r3, [r4, #20]
 800124c:	b002      	add	sp, #8
 800124e:	bd70      	pop	{r4, r5, r6, pc}
 8001250:	466a      	mov	r2, sp
 8001252:	ab01      	add	r3, sp, #4
 8001254:	f7ff ffc8 	bl	80011e8 <__swhatbuf_r>
 8001258:	9900      	ldr	r1, [sp, #0]
 800125a:	4605      	mov	r5, r0
 800125c:	4630      	mov	r0, r6
 800125e:	f7ff fa5b 	bl	8000718 <_malloc_r>
 8001262:	b948      	cbnz	r0, 8001278 <__smakebuf_r+0x44>
 8001264:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001268:	059a      	lsls	r2, r3, #22
 800126a:	d4ef      	bmi.n	800124c <__smakebuf_r+0x18>
 800126c:	f023 0303 	bic.w	r3, r3, #3
 8001270:	f043 0302 	orr.w	r3, r3, #2
 8001274:	81a3      	strh	r3, [r4, #12]
 8001276:	e7e3      	b.n	8001240 <__smakebuf_r+0xc>
 8001278:	4b0d      	ldr	r3, [pc, #52]	; (80012b0 <__smakebuf_r+0x7c>)
 800127a:	62b3      	str	r3, [r6, #40]	; 0x28
 800127c:	89a3      	ldrh	r3, [r4, #12]
 800127e:	6020      	str	r0, [r4, #0]
 8001280:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001284:	81a3      	strh	r3, [r4, #12]
 8001286:	9b00      	ldr	r3, [sp, #0]
 8001288:	6120      	str	r0, [r4, #16]
 800128a:	6163      	str	r3, [r4, #20]
 800128c:	9b01      	ldr	r3, [sp, #4]
 800128e:	b15b      	cbz	r3, 80012a8 <__smakebuf_r+0x74>
 8001290:	4630      	mov	r0, r6
 8001292:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001296:	f000 f893 	bl	80013c0 <_isatty_r>
 800129a:	b128      	cbz	r0, 80012a8 <__smakebuf_r+0x74>
 800129c:	89a3      	ldrh	r3, [r4, #12]
 800129e:	f023 0303 	bic.w	r3, r3, #3
 80012a2:	f043 0301 	orr.w	r3, r3, #1
 80012a6:	81a3      	strh	r3, [r4, #12]
 80012a8:	89a0      	ldrh	r0, [r4, #12]
 80012aa:	4305      	orrs	r5, r0
 80012ac:	81a5      	strh	r5, [r4, #12]
 80012ae:	e7cd      	b.n	800124c <__smakebuf_r+0x18>
 80012b0:	08000531 	.word	0x08000531

080012b4 <memchr>:
 80012b4:	4603      	mov	r3, r0
 80012b6:	b510      	push	{r4, lr}
 80012b8:	b2c9      	uxtb	r1, r1
 80012ba:	4402      	add	r2, r0
 80012bc:	4293      	cmp	r3, r2
 80012be:	4618      	mov	r0, r3
 80012c0:	d101      	bne.n	80012c6 <memchr+0x12>
 80012c2:	2000      	movs	r0, #0
 80012c4:	e003      	b.n	80012ce <memchr+0x1a>
 80012c6:	7804      	ldrb	r4, [r0, #0]
 80012c8:	3301      	adds	r3, #1
 80012ca:	428c      	cmp	r4, r1
 80012cc:	d1f6      	bne.n	80012bc <memchr+0x8>
 80012ce:	bd10      	pop	{r4, pc}

080012d0 <__malloc_lock>:
 80012d0:	4801      	ldr	r0, [pc, #4]	; (80012d8 <__malloc_lock+0x8>)
 80012d2:	f7ff b9ff 	b.w	80006d4 <__retarget_lock_acquire_recursive>
 80012d6:	bf00      	nop
 80012d8:	20000084 	.word	0x20000084

080012dc <__malloc_unlock>:
 80012dc:	4801      	ldr	r0, [pc, #4]	; (80012e4 <__malloc_unlock+0x8>)
 80012de:	f7ff b9fa 	b.w	80006d6 <__retarget_lock_release_recursive>
 80012e2:	bf00      	nop
 80012e4:	20000084 	.word	0x20000084

080012e8 <_free_r>:
 80012e8:	b538      	push	{r3, r4, r5, lr}
 80012ea:	4605      	mov	r5, r0
 80012ec:	2900      	cmp	r1, #0
 80012ee:	d040      	beq.n	8001372 <_free_r+0x8a>
 80012f0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80012f4:	1f0c      	subs	r4, r1, #4
 80012f6:	2b00      	cmp	r3, #0
 80012f8:	bfb8      	it	lt
 80012fa:	18e4      	addlt	r4, r4, r3
 80012fc:	f7ff ffe8 	bl	80012d0 <__malloc_lock>
 8001300:	4a1c      	ldr	r2, [pc, #112]	; (8001374 <_free_r+0x8c>)
 8001302:	6813      	ldr	r3, [r2, #0]
 8001304:	b933      	cbnz	r3, 8001314 <_free_r+0x2c>
 8001306:	6063      	str	r3, [r4, #4]
 8001308:	6014      	str	r4, [r2, #0]
 800130a:	4628      	mov	r0, r5
 800130c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001310:	f7ff bfe4 	b.w	80012dc <__malloc_unlock>
 8001314:	42a3      	cmp	r3, r4
 8001316:	d908      	bls.n	800132a <_free_r+0x42>
 8001318:	6820      	ldr	r0, [r4, #0]
 800131a:	1821      	adds	r1, r4, r0
 800131c:	428b      	cmp	r3, r1
 800131e:	bf01      	itttt	eq
 8001320:	6819      	ldreq	r1, [r3, #0]
 8001322:	685b      	ldreq	r3, [r3, #4]
 8001324:	1809      	addeq	r1, r1, r0
 8001326:	6021      	streq	r1, [r4, #0]
 8001328:	e7ed      	b.n	8001306 <_free_r+0x1e>
 800132a:	461a      	mov	r2, r3
 800132c:	685b      	ldr	r3, [r3, #4]
 800132e:	b10b      	cbz	r3, 8001334 <_free_r+0x4c>
 8001330:	42a3      	cmp	r3, r4
 8001332:	d9fa      	bls.n	800132a <_free_r+0x42>
 8001334:	6811      	ldr	r1, [r2, #0]
 8001336:	1850      	adds	r0, r2, r1
 8001338:	42a0      	cmp	r0, r4
 800133a:	d10b      	bne.n	8001354 <_free_r+0x6c>
 800133c:	6820      	ldr	r0, [r4, #0]
 800133e:	4401      	add	r1, r0
 8001340:	1850      	adds	r0, r2, r1
 8001342:	4283      	cmp	r3, r0
 8001344:	6011      	str	r1, [r2, #0]
 8001346:	d1e0      	bne.n	800130a <_free_r+0x22>
 8001348:	6818      	ldr	r0, [r3, #0]
 800134a:	685b      	ldr	r3, [r3, #4]
 800134c:	4401      	add	r1, r0
 800134e:	6011      	str	r1, [r2, #0]
 8001350:	6053      	str	r3, [r2, #4]
 8001352:	e7da      	b.n	800130a <_free_r+0x22>
 8001354:	d902      	bls.n	800135c <_free_r+0x74>
 8001356:	230c      	movs	r3, #12
 8001358:	602b      	str	r3, [r5, #0]
 800135a:	e7d6      	b.n	800130a <_free_r+0x22>
 800135c:	6820      	ldr	r0, [r4, #0]
 800135e:	1821      	adds	r1, r4, r0
 8001360:	428b      	cmp	r3, r1
 8001362:	bf01      	itttt	eq
 8001364:	6819      	ldreq	r1, [r3, #0]
 8001366:	685b      	ldreq	r3, [r3, #4]
 8001368:	1809      	addeq	r1, r1, r0
 800136a:	6021      	streq	r1, [r4, #0]
 800136c:	6063      	str	r3, [r4, #4]
 800136e:	6054      	str	r4, [r2, #4]
 8001370:	e7cb      	b.n	800130a <_free_r+0x22>
 8001372:	bd38      	pop	{r3, r4, r5, pc}
 8001374:	20000088 	.word	0x20000088

08001378 <_read_r>:
 8001378:	b538      	push	{r3, r4, r5, lr}
 800137a:	4604      	mov	r4, r0
 800137c:	4608      	mov	r0, r1
 800137e:	4611      	mov	r1, r2
 8001380:	2200      	movs	r2, #0
 8001382:	4d05      	ldr	r5, [pc, #20]	; (8001398 <_read_r+0x20>)
 8001384:	602a      	str	r2, [r5, #0]
 8001386:	461a      	mov	r2, r3
 8001388:	f7fe ff00 	bl	800018c <_read>
 800138c:	1c43      	adds	r3, r0, #1
 800138e:	d102      	bne.n	8001396 <_read_r+0x1e>
 8001390:	682b      	ldr	r3, [r5, #0]
 8001392:	b103      	cbz	r3, 8001396 <_read_r+0x1e>
 8001394:	6023      	str	r3, [r4, #0]
 8001396:	bd38      	pop	{r3, r4, r5, pc}
 8001398:	20000090 	.word	0x20000090

0800139c <_fstat_r>:
 800139c:	b538      	push	{r3, r4, r5, lr}
 800139e:	2300      	movs	r3, #0
 80013a0:	4d06      	ldr	r5, [pc, #24]	; (80013bc <_fstat_r+0x20>)
 80013a2:	4604      	mov	r4, r0
 80013a4:	4608      	mov	r0, r1
 80013a6:	4611      	mov	r1, r2
 80013a8:	602b      	str	r3, [r5, #0]
 80013aa:	f7fe ff33 	bl	8000214 <_fstat>
 80013ae:	1c43      	adds	r3, r0, #1
 80013b0:	d102      	bne.n	80013b8 <_fstat_r+0x1c>
 80013b2:	682b      	ldr	r3, [r5, #0]
 80013b4:	b103      	cbz	r3, 80013b8 <_fstat_r+0x1c>
 80013b6:	6023      	str	r3, [r4, #0]
 80013b8:	bd38      	pop	{r3, r4, r5, pc}
 80013ba:	bf00      	nop
 80013bc:	20000090 	.word	0x20000090

080013c0 <_isatty_r>:
 80013c0:	b538      	push	{r3, r4, r5, lr}
 80013c2:	2300      	movs	r3, #0
 80013c4:	4d05      	ldr	r5, [pc, #20]	; (80013dc <_isatty_r+0x1c>)
 80013c6:	4604      	mov	r4, r0
 80013c8:	4608      	mov	r0, r1
 80013ca:	602b      	str	r3, [r5, #0]
 80013cc:	f7fe ff31 	bl	8000232 <_isatty>
 80013d0:	1c43      	adds	r3, r0, #1
 80013d2:	d102      	bne.n	80013da <_isatty_r+0x1a>
 80013d4:	682b      	ldr	r3, [r5, #0]
 80013d6:	b103      	cbz	r3, 80013da <_isatty_r+0x1a>
 80013d8:	6023      	str	r3, [r4, #0]
 80013da:	bd38      	pop	{r3, r4, r5, pc}
 80013dc:	20000090 	.word	0x20000090

080013e0 <_init>:
 80013e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013e2:	bf00      	nop
 80013e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013e6:	bc08      	pop	{r3}
 80013e8:	469e      	mov	lr, r3
 80013ea:	4770      	bx	lr

080013ec <_fini>:
 80013ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013ee:	bf00      	nop
 80013f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013f2:	bc08      	pop	{r3}
 80013f4:	469e      	mov	lr, r3
 80013f6:	4770      	bx	lr
